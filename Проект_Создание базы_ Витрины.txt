--СОЗДАНИЕ ТАБЛИЦ

CREATE TABLE Client(
ClientID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
Surname VARCHAR(255) NOT NULL,
Name VARCHAR(255) NOT NULL,
Patronymic VARCHAR(255),
INN VARCHAR(12),
BirthDate DATE NOT NULL,
Phone VARCHAR(11) NOT NULL,
Email VARCHAR(255),
MonthlyIncome DECIMAL(10,2) NOT NULL,
Cityzenship VARCHAR(50) CONSTRAINT cityzenship_check CHECK (Cityzenship IN ('Казахстан', 'Туркмения', 'Азербайджан', 'Таджикистан', 'Киргизия', 'Армения', 'Российская Федерация', 'Узбекистан', 'Республика Беларусь', 'Молдавия'))
);

ALTER TABLE Client
ADD MaritalStatus VARCHAR(20) CHECK (MaritalStatus IN ('В браке', 'Одинок'));

ALTER TABLE Client
ADD Gender VARCHAR(20) CHECK (Gender IN ('М', 'Ж'));

SELECT * FROM client;

COMMIT;

CREATE TABLE ExternalCreditHistory(
ExternalCreditID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
BankName VARCHAR(255) NOT NULL,
LoanType VARCHAR(100) CONSTRAINT loantype_check CHECK (LoanType IN ('Потребительский кредит', 'Ипотека', 'Автокредит', 'Кредитная карта', 'Кредит под залог имущества', 'Образовательные кредиты', 'Овердрафт по счету', 'Рефинансирование')),
LoanAmount DECIMAL(15,2) NOT NULL,
StartDate DATE NOT NULL,
EndDate DATE,
InterestRate DECIMAL(5,2) NOT NULL,
CurrentStatus VARCHAR(50) CONSTRAINT currentstatus_check CHECK (CurrentStatus IN ('Активный', 'Закрыт', 'Просрочен', 'Неуплата', 'Реструктурирован', 'Рефинансирован', 'Списан')),
MissedPaymentsCount NUMBER NOT NULL,
TotalPaidAmount DECIMAL(15,2) NOT NULL,
RemainingBalance DECIMAL(15,2) NOT NULL,
CollateralValue DECIMAL(10,2),
Client_ClientID NUMBER,
CONSTRAINT fk_client FOREIGN KEY (Client_ClientID) REFERENCES Client(ClientID)
);

COMMIT;

CREATE TABLE Branch(
BranchID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
Branch_Name VARCHAR(255) NOT NULL,
Branch_Address VARCHAR(255) NOT NULL,
Branch_Phone VARCHAR(20) NOT NULL,
Branch_Manager VARCHAR(255) NOT NULL)
;
COMMIT;

CREATE TABLE PaymentSchedule (
    PaymentID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DueDate DATE NOT NULL,
    PrincpalPayment DECIMAL(15,2) NOT NULL,
    InterestPayment DECIMAL(15,2) NOT NULL,
    Deal_DealID NUMBER NOT NULL,
    CONSTRAINT fk_Deal FOREIGN KEY (Deal_DealID) REFERENCES Deal(DealID)
);

CREATE TABLE Deal (
    DealID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DealAmount DECIMAL(15,2) NOT NULL,
    InterestRate DECIMAL(5,2) NOT NULL,
    StartDate DATE NOT NULL,
    EndDate DATE NOT NULL,
    DealType VARCHAR(100) CONSTRAINT DealType_check CHECK (DealType IN ('Расчетные и кассовые операции', 
                  'Депозитные операции', 'Кредитные операции', 'Операции с ценными бумагами', 
                  'Валютные операции', 'Операции с драгоценными металлами и камнями', 
                  'Операции с деривативами')),
    Branch_BranchID NUMBER NOT NULL,
    CONSTRAINT fk_BranchID FOREIGN KEY (Branch_BranchID) REFERENCES Branch(BranchID)
);
COMMIT;

CREATE TABLE Collateral(
CollateralID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
CollateralType VARCHAR(100) CONSTRAINT collateraltype_check CHECK (CollateralType IN ('Недвижимость', 'Транспортное средство',
'Ценные бумаги', 'Оборудование', 'Права на интеллектуальную собственность',
'Золото и драгоценные металлы', 'Права на долю в компании', 'Целевые депозиты')),
EstimatedValue DECIMAL(15,2) NOT NULL ,
Deal_DealID NUMBER ,
CONSTRAINT fk_deal_collateral FOREIGN KEY (Deal_DealID) REFERENCES  DEAL(DealID)
);
COMMIT;


CREATE TABLE Account(
AccountID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
AccountType VARCHAR(50) CONSTRAINT accounttype_chek CHECK (AccountType IN ('Счёт основного долга', 'Счёт процентов',
'Резервный счёт', 'Эскроу-счёт', 'Счёт для штрафов и неустоек', 'Счёт залога', 'Овердрафтный счёт', 'Текущий счёт', 'Сберегательный счёт', 'Депозитный счёт', 'Валютный счёт')),
AccountNumber NUMBER NOT NULL ,
AccountCurrency VARCHAR(3) CONSTRAINT accountcurrency_chek CHECK (AccountCurrency IN ('USD', 'EUR', 'GBP', 'RUB', 'JPY', 'CNY', 'CHF', 'CAD', 'AUD',
'NZD', 'INR', 'BRL', 'ZAR', 'TRY', 'SGD', 'AED', 'SEK', 'DKK')),
OpenDate DATE NOT NULL,
CloseDate DATE ,
AccountStatus VARCHAR(50) CONSTRAINT accountstatus_chek CHECK (AccountStatus IN ('Активный', 'Закрыт', 'Заморожен', 'Перерасход',
'С просроченной задолженностью', 'Неактивный', 'Заблокирован')),
Client_ClientID NUMBER,
CONSTRAINT fk_client_account FOREIGN KEY (Client_ClientID) REFERENCES Client(ClientID)
);
COMMIT;

CREATE TABLE AccountDeal (
    AccountDealID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Account_AccountID NUMBER,
    CONSTRAINT fk_accountid_accuountdeal FOREIGN KEY (Account_AccountID) REFERENCES  Account(AccountID),
    Deal_Deal_ID NUMBER,
    CONSTRAINT fk_deal_accountdeal FOREIGN KEY (Deal_Deal_ID) REFERENCES  DEAL(DealID)
);
COMMIT;
CREATE TABLE AccountBalance (
    BalanceID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    BalanceAmount DECIMAL(15, 2) NOT NULL,
    BalanceDate DATE NOT NULL,
    TransactionType VARCHAR2(20) CHECK (TransactionType IN ('Исходящий', 'Входящий')),
    Account_AccountID NUMBER,
    CONSTRAINT fk_accountid_accountbalance FOREIGN KEY (Account_AccountID) REFERENCES Account(AccountID)
);
COMMIT;

--ЗАПОЛНЕНИЕ ТАБЛИЦ
INSERT INTO Client (Surname, Name, Patronymic, INN, BirthDate, Phone, Email, MonthlyIncome, Cityzenship) VALUES
('Иванов', 'Иван', 'Иванович', '123456789012', TO_DATE('15-03-1985', 'DD-MM-YYYY'), '89001234567', 'ivanov@example.com', 50000.00, 'Российская Федерация');

INSERT INTO Client (Surname, Name, Patronymic, INN, BirthDate, Phone, Email, MonthlyIncome, Cityzenship) VALUES
('Петрова', 'Анна', 'Сергеевна', '987654321098', TO_DATE('20-05-1990', 'DD-MM-YYYY'), '89002345678', 'petrova@example.com', 60000.00, 'Казахстан');

INSERT INTO Client (Surname, Name, Patronymic, INN, BirthDate, Phone, Email, MonthlyIncome, Cityzenship) VALUES
('Сидоров', 'Алексей', 'Алексеевич', '456123789456', TO_DATE('30-12-1992', 'DD-MM-YYYY'), '89003456789', 'sidorov@example.com', 55000.00, 'Таджикистан');

INSERT INTO Client (Surname, Name, Patronymic, INN, BirthDate, Phone, Email, MonthlyIncome, Cityzenship) VALUES
('Кузнецов', 'Дмитрий', 'Александрович', '321654987012', TO_DATE('10-10-1980', 'DD-MM-YYYY'), '89004567890', 'kuznetsov@example.com', 70000.00, 'Российская Федерация');

INSERT INTO Client (Surname, Name, Patronymic, INN, BirthDate, Phone, Email, MonthlyIncome, Cityzenship) VALUES
('Смирнова', 'Елена', 'Николаевна', '654987321654', TO_DATE('05-01-1988', 'DD-MM-YYYY'), '89005678901', 'smirnova@example.com', 45000.00, 'Узбекистан');

INSERT INTO Client (Surname, Name, Patronymic, INN, BirthDate, Phone, Email, MonthlyIncome, Cityzenship) VALUES
('Попов', 'Сергей', 'Викторович', '789654123012', TO_DATE('12-04-1975', 'DD-MM-YYYY'), '89006789012', 'popov@example.com', 80000.00, 'Республика Беларусь');

INSERT INTO Client (Surname, Name, Patronymic, INN, BirthDate, Phone, Email, MonthlyIncome, Cityzenship) VALUES
('Михайлова', 'Ольга', 'Петровна', '159753456987', TO_DATE('15-11-1995', 'DD-MM-YYYY'), '89007890123', 'mikhailova@example.com', 35000.00, 'Киргизия');

INSERT INTO Client (Surname, Name, Patronymic, INN, BirthDate, Phone, Email, MonthlyIncome, Cityzenship) VALUES
('Ковалев', 'Анатолий', 'Геннадьевич', '258963147852', TO_DATE('22-08-1983', 'DD-MM-YYYY'), '89008901234', 'kovalev@example.com', 90000.00, 'Армения');

INSERT INTO Client (Surname, Name, Patronymic, INN, BirthDate, Phone, Email, MonthlyIncome, Cityzenship) VALUES
('Фролова', 'Татьяна', 'Сергеевна', '369258147963', TO_DATE('18-06-1990', 'DD-MM-YYYY'), '89009012345', 'frolova@example.com', 60000.00, 'Азербайджан');

INSERT INTO Client (Surname, Name, Patronymic, INN, BirthDate, Phone, Email, MonthlyIncome, Cityzenship) VALUES
('Григорьев', 'Александр', 'Васильевич', '753159468258', TO_DATE('01-02-1986', 'DD-MM-YYYY'), '89009123456', 'grigoryev@example.com', 52000.00, 'Таджикистан');

SELECT * FROM client;

UPDATE Client
SET MaritalStatus = 'В браке'
WHERE ClientID = 1;

UPDATE Client
SET Gender = 'М'
WHERE ClientID = 1;

UPDATE Client
SET MaritalStatus = 'Одинок'
WHERE ClientID = 2;

UPDATE Client
SET Gender = 'Ж'
WHERE ClientID = 2;

UPDATE Client
SET MaritalStatus = 'В браке'
WHERE ClientID = 3;

UPDATE Client
SET Gender = 'М'
WHERE ClientID = 3;

UPDATE Client
SET MaritalStatus = 'Одинок'
WHERE ClientID = 4;

UPDATE Client
SET Gender = 'М'
WHERE ClientID = 4;

UPDATE Client
SET MaritalStatus = 'В браке'
WHERE ClientID = 5;

UPDATE Client
SET Gender = 'Ж'
WHERE ClientID = 5;

UPDATE Client
SET MaritalStatus = 'Одинок'
WHERE ClientID = 6;

UPDATE Client
SET Gender = 'М'
WHERE ClientID = 6;

UPDATE Client
SET MaritalStatus = 'В браке'
WHERE ClientID = 7;

UPDATE Client
SET Gender = 'Ж'
WHERE ClientID = 7;

UPDATE Client
SET MaritalStatus = 'Одинок'
WHERE ClientID = 8;

UPDATE Client
SET Gender = 'М'
WHERE ClientID = 8;

UPDATE Client
SET MaritalStatus = 'В браке'
WHERE ClientID = 9;

UPDATE Client
SET Gender = 'Ж'
WHERE ClientID = 9;

UPDATE Client
SET MaritalStatus = 'Одинок'
WHERE ClientID = 10;

UPDATE Client
SET Gender = 'М'
WHERE ClientID = 10;

SELECT * FROM client;

COMMIT;


SELECT * FROM client;

INSERT INTO Branch (Branch_Name, Branch_Address, Branch_Phone, Branch_Manager) VALUES
('Главный', 'г. Москва, ул. Тверская, д. 1', '84951234567', 'Смирнов Сергей');

INSERT INTO Branch (Branch_Name, Branch_Address, Branch_Phone, Branch_Manager) VALUES
('Филиал 1', 'г. Санкт-Петербург, ул. Невский, д. 10', '81234567890', 'Иванова Мария');

INSERT INTO Branch (Branch_Name, Branch_Address, Branch_Phone, Branch_Manager) VALUES
('Филиал 2', 'г. Алматы, ул. Абая, д. 25', '72712345678', 'Касымов Нурлан');

INSERT INTO Branch (Branch_Name, Branch_Address, Branch_Phone, Branch_Manager) VALUES
('Филиал 3', 'г. Ереван, ул. Сарьяна, д. 15', '37412345678', 'Петров Армен');

INSERT INTO Branch (Branch_Name, Branch_Address, Branch_Phone, Branch_Manager) VALUES
('Филиал 4', 'г. Минск, ул. Независимости, д. 30', '37512345678', 'Ковалев Дмитрий');

INSERT INTO Branch (Branch_Name, Branch_Address, Branch_Phone, Branch_Manager) VALUES
('Филиал 5', 'г. Бишкек, ул. Манаса, д. 20', '99612345678', 'Сидорова Оксана');

INSERT INTO Branch (Branch_Name, Branch_Address, Branch_Phone, Branch_Manager) VALUES
('Филиал 6', 'г. Ташкент, ул. Амир Темура, д. 5', '99812345678', 'Бекова Лейла');

INSERT INTO Branch (Branch_Name, Branch_Address, Branch_Phone, Branch_Manager) VALUES
('Филиал 7', 'г. Нур-Султан, ул. Казахстан, д. 40', '77712345678', 'Рахимов Алан');

INSERT INTO Branch (Branch_Name, Branch_Address, Branch_Phone, Branch_Manager) VALUES
('Филиал 8', 'г. Баку, ул. Физули, д. 18', '99412345678', 'Алиев Ага');

INSERT INTO Branch (Branch_Name, Branch_Address, Branch_Phone, Branch_Manager) VALUES
('Филиал 9', 'г. Кишинев, ул. Пушкина, д. 12', '37312345678', 'Грекова Светлана');

SELECT * FROM BRANCH b ;

COMMIT;




INSERT INTO ExternalCreditHistory (BankName, LoanType, LoanAmount, StartDate, EndDate, InterestRate, CurrentStatus, MissedPaymentsCount, TotalPaidAmount, RemainingBalance, CollateralValue, Client_ClientID) VALUES
('Сбербанк', 'Потребительский кредит', 150000.00, TO_DATE('01-01-2020', 'DD-MM-YYYY'), TO_DATE('01-01-2022', 'DD-MM-YYYY'), 12.50, 'Закрыт', 0, 150000.00, 0.00, NULL, 1);

INSERT INTO ExternalCreditHistory (BankName, LoanType, LoanAmount, StartDate, EndDate, InterestRate, CurrentStatus, MissedPaymentsCount, TotalPaidAmount, RemainingBalance, CollateralValue, Client_ClientID) VALUES
('ВТБ', 'Ипотека', 500000.00, TO_DATE('15-02-2019', 'DD-MM-YYYY'), TO_DATE('15-02-2024', 'DD-MM-YYYY'), 9.00, 'Активный', 2, 200000.00, 300000.00, NULL, 2);

INSERT INTO ExternalCreditHistory (BankName, LoanType, LoanAmount, StartDate, EndDate, InterestRate, CurrentStatus, MissedPaymentsCount, TotalPaidAmount, RemainingBalance, CollateralValue, Client_ClientID) VALUES
('Газпромбанк', 'Кредитная карта', 100000.00, TO_DATE('10-06-2021', 'DD-MM-YYYY'), NULL, 18.00, 'Просрочен', 3, 30000.00, 70000.00, NULL, 3);

INSERT INTO ExternalCreditHistory (BankName, LoanType, LoanAmount, StartDate, EndDate, InterestRate, CurrentStatus, MissedPaymentsCount, TotalPaidAmount, RemainingBalance, CollateralValue, Client_ClientID) VALUES
('Россельхозбанк', 'Автокредит', 250000.00, TO_DATE('20-03-2020', 'DD-MM-YYYY'), TO_DATE('20-03-2025', 'DD-MM-YYYY'), 11.50, 'Активный', 1, 100000.00, 150000.00, NULL, 4);

INSERT INTO ExternalCreditHistory (BankName, LoanType, LoanAmount, StartDate, EndDate, InterestRate, CurrentStatus, MissedPaymentsCount, TotalPaidAmount, RemainingBalance, CollateralValue, Client_ClientID) VALUES
('Альфа-Банк', 'Ипотека', 750000.00, TO_DATE('05-01-2021', 'DD-MM-YYYY'), TO_DATE('05-01-2026', 'DD-MM-YYYY'), 10.00, 'Закрыт', 0, 400000.00, 350000.00, NULL, 5);

INSERT INTO ExternalCreditHistory (BankName, LoanType, LoanAmount, StartDate, EndDate, InterestRate, CurrentStatus, MissedPaymentsCount, TotalPaidAmount, RemainingBalance, CollateralValue, Client_ClientID) VALUES
('Почта Банк', 'Потребительский кредит', 200000.00, TO_DATE('10-07-2021', 'DD-MM-YYYY'), NULL, 15.00, 'Активный', 1, 50000.00, 150000.00, NULL, 6);

INSERT INTO ExternalCreditHistory (BankName, LoanType, LoanAmount, StartDate, EndDate, InterestRate, CurrentStatus, MissedPaymentsCount, TotalPaidAmount, RemainingBalance, CollateralValue, Client_ClientID) VALUES
('РТС Банк', 'Кредитная карта', 50000.00, TO_DATE('15-09-2020', 'DD-MM-YYYY'), NULL, 20.00, 'Просрочен', 4, 10000.00, 40000.00, NULL, 7);

INSERT INTO ExternalCreditHistory (BankName, LoanType, LoanAmount, StartDate, EndDate, InterestRate, CurrentStatus, MissedPaymentsCount, TotalPaidAmount, RemainingBalance, CollateralValue, Client_ClientID) VALUES
('УБРиР', 'Образовательные кредиты', 150000.00, TO_DATE('01-10-2021', 'DD-MM-YYYY'), NULL, 12.00, 'Активный', 0, 20000.00, 130000.00, NULL, 8);

INSERT INTO ExternalCreditHistory (BankName, LoanType, LoanAmount, StartDate, EndDate, InterestRate, CurrentStatus, MissedPaymentsCount, TotalPaidAmount, RemainingBalance, CollateralValue, Client_ClientID) VALUES
('Совкомбанк', 'Кредит под залог имущества', 300000.00, TO_DATE('15-05-2021', 'DD-MM-YYYY'), TO_DATE('15-05-2023', 'DD-MM-YYYY'), 9.50, 'Закрыт', 0, 300000.00, 0.00, NULL, 9);

INSERT INTO ExternalCreditHistory (BankName, LoanType, LoanAmount, StartDate, EndDate, InterestRate, CurrentStatus, MissedPaymentsCount, TotalPaidAmount, RemainingBalance, CollateralValue, Client_ClientID) VALUES
('Т-Банк', 'Овердрафт по счету', 100000.00, TO_DATE('30-11-2021', 'DD-MM-YYYY'), NULL, 22.00, 'Неуплата', 5, 20000.00, 80000.00, NULL, 10);

SELECT * FROM EXTERNALCREDITHISTORY e;






INSERT INTO Deal (DealAmount, InterestRate, StartDate, EndDate, DealType, Branch_BranchID) VALUES
(200000.00, 10.50, TO_DATE('01-01-2021', 'DD-MM-YYYY'), TO_DATE('01-01-2023', 'DD-MM-YYYY'), 'Кредитные операции', 1);

INSERT INTO Deal (DealAmount, InterestRate, StartDate, EndDate, DealType, Branch_BranchID) VALUES
(300000.00, 11.00, TO_DATE('15-03-2020', 'DD-MM-YYYY'), TO_DATE('15-03-2025', 'DD-MM-YYYY'), 'Депозитные операции', 2);

INSERT INTO Deal (DealAmount, InterestRate, StartDate, EndDate, DealType, Branch_BranchID) VALUES
(150000.00, 9.00, TO_DATE('10-07-2022', 'DD-MM-YYYY'), TO_DATE('10-07-2024', 'DD-MM-YYYY'), 'Расчетные и кассовые операции', 3);

INSERT INTO Deal (DealAmount, InterestRate, StartDate, EndDate, DealType, Branch_BranchID) VALUES
(250000.00, 10.00, TO_DATE('20-05-2021', 'DD-MM-YYYY'), TO_DATE('20-05-2024', 'DD-MM-YYYY'), 'Кредитные операции', 4);

INSERT INTO Deal (DealAmount, InterestRate, StartDate, EndDate, DealType, Branch_BranchID) VALUES
(500000.00, 12.50, TO_DATE('01-09-2020', 'DD-MM-YYYY'), TO_DATE('01-09-2023', 'DD-MM-YYYY'), 'Депозитные операции', 5);

INSERT INTO Deal (DealAmount, InterestRate, StartDate, EndDate, DealType, Branch_BranchID) VALUES
(100000.00, 8.00, TO_DATE('15-02-2022', 'DD-MM-YYYY'), TO_DATE('15-02-2025', 'DD-MM-YYYY'), 'Расчетные и кассовые операции', 6);

INSERT INTO Deal (DealAmount, InterestRate, StartDate, EndDate, DealType, Branch_BranchID) VALUES
(300000.00, 9.50, TO_DATE('30-12-2021', 'DD-MM-YYYY'), TO_DATE('30-12-2024', 'DD-MM-YYYY'), 'Кредитные операции', 7);

INSERT INTO Deal (DealAmount, InterestRate, StartDate, EndDate, DealType, Branch_BranchID) VALUES
(400000.00, 11.00, TO_DATE('25-03-2020', 'DD-MM-YYYY'), TO_DATE('25-03-2025', 'DD-MM-YYYY'), 'Депозитные операции', 8);

INSERT INTO Deal (DealAmount, InterestRate, StartDate, EndDate, DealType, Branch_BranchID) VALUES
(150000.00, 10.50, TO_DATE('12-11-2021', 'DD-MM-YYYY'), TO_DATE('12-11-2023', 'DD-MM-YYYY'), 'Расчетные и кассовые операции', 9);

INSERT INTO Deal (DealAmount, InterestRate, StartDate, EndDate, DealType, Branch_BranchID) VALUES
(350000.00, 12.00, TO_DATE('01-06-2022', 'DD-MM-YYYY'), TO_DATE('01-06-2025', 'DD-MM-YYYY'), 'Кредитные операции', 10);

SELECT * FROM deal;

ALTER TABLE ACCOUNT 
MODIFY AccountType VARCHAR(100);

ALTER TABLE ACCOUNT 
MODIFY AccountStatus VARCHAR(100);

COMMIT;


INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, CloseDate, AccountStatus, Client_ClientID) VALUES
('Текущий счёт', 40817810000123456789, 'RUB', TO_DATE('01-01-2021', 'DD-MM-YYYY'), NULL, 'Активный', 1);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, CloseDate, AccountStatus, Client_ClientID) VALUES
('Сберегательный счёт', 40817820000123456790, 'EUR', TO_DATE('15-03-2022', 'DD-MM-YYYY'), NULL, 'Активный', 2);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, CloseDate, AccountStatus, Client_ClientID) VALUES
('Депозитный счёт', 40817840000123456791, 'USD', TO_DATE('10-07-2023', 'DD-MM-YYYY'), NULL, 'Заморожен', 3);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, CloseDate, AccountStatus, Client_ClientID) VALUES
('Эскроу-счёт', 40817820000123456792, 'RUB', TO_DATE('15-02-2021', 'DD-MM-YYYY'), NULL, 'Активный', 4);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, CloseDate, AccountStatus, Client_ClientID) VALUES
('Счёт залога', 40817810000123456793, 'EUR', TO_DATE('05-06-2020', 'DD-MM-YYYY'), NULL, 'Закрыт', 5);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, CloseDate, AccountStatus, Client_ClientID) VALUES
('Текущий счёт', 40817840000123456794, 'USD', TO_DATE('12-01-2022', 'DD-MM-YYYY'), NULL, 'Неактивный', 6);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, CloseDate, AccountStatus, Client_ClientID) VALUES
('Счёт для штрафов и неустоек', 40817830000123456795, 'RUB', TO_DATE('18-09-2020', 'DD-MM-YYYY'), NULL, 'Заморожен', 7);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, CloseDate, AccountStatus, Client_ClientID) VALUES
('Текущий счёт', 40817830000123456775, 'RUB', TO_DATE('21-09-2020', 'DD-MM-YYYY'), NULL, 'Активный', 7);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, CloseDate, AccountStatus, Client_ClientID) VALUES
('Резервный счёт', 40817830000123456776, 'RUB', TO_DATE('30-12-2022', 'DD-MM-YYYY'), NULL, 'Активный', 7);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, CloseDate, AccountStatus, Client_ClientID) VALUES
('Счёт основного долга', 40817830000123456777, 'RUB', TO_DATE('30-12-2022', 'DD-MM-YYYY'), NULL, 'Активный', 7);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, CloseDate, AccountStatus, Client_ClientID) VALUES
('Счёт процентов', 40817830000123456778, 'RUB', TO_DATE('30-12-2022', 'DD-MM-YYYY'), NULL, 'Активный', 7);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, CloseDate, AccountStatus, Client_ClientID) VALUES
('Овердрафтный счёт', 40817820000123456796, 'EUR', TO_DATE('25-12-2021', 'DD-MM-YYYY'), NULL, 'Закрыт', 8);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, CloseDate, AccountStatus, Client_ClientID) VALUES
('Сберегательный счёт', 40817840000123456797, 'USD', TO_DATE('30-03-2023', 'DD-MM-YYYY'), NULL, 'Активный', 9);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, CloseDate, AccountStatus, Client_ClientID) VALUES
('Депозитный счёт', 40817810000123456798, 'RUB', TO_DATE('22-08-2022', 'DD-MM-YYYY'), NULL, 'Активный', 10);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, CloseDate, AccountStatus, Client_ClientID) VALUES
('Резервный счёт', 40817810000123456779, 'RUB', TO_DATE('01-06-2022', 'DD-MM-YYYY'), NULL, 'Активный', 10);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, CloseDate, AccountStatus, Client_ClientID) VALUES
('Счёт основного долга', 40817810000123456780, 'RUB', TO_DATE('01-06-2022', 'DD-MM-YYYY'), NULL, 'Активный', 10);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, CloseDate, AccountStatus, Client_ClientID) VALUES
('Счёт процентов', 40817810000123456781, 'RUB', TO_DATE('01-06-2022', 'DD-MM-YYYY'), NULL, 'Активный', 10);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, CloseDate, AccountStatus, Client_ClientID) VALUES
('Счёт для штрафов и неустоек', 40817810000123456781, 'RUB', TO_DATE('01-06-2022', 'DD-MM-YYYY'), NULL, 'Активный', 10);

SELECT * FROM deal;

SELECT * FROM ACCOUNT a
WHERE CLIENT_CLIENTID = 10;

   
 COMMIT;


INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(1, 1);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(2, 2);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(3, 3);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(4, 4);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(5, 5);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(6, 6);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(7, 7);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(8, 8);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(9, 9);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(10, 10);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(1, 4);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(11, 1);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(12, 1);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(13, 1);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(14, 1);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(21, 4);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(22, 4);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(23, 4);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(24, 4);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(27, 7);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(29, 7);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(30, 7);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(28, 7);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(32, 10);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(33, 10);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(34, 10);

INSERT INTO AccountDeal (Account_AccountID, Deal_Deal_ID) VALUES
(31, 10);

SELECT * FROM deal;



INSERT INTO Collateral (CollateralType, EstimatedValue, Deal_DealID) VALUES
('Недвижимость', 3000000.00, 1);

INSERT INTO Collateral (CollateralType, EstimatedValue, Deal_DealID) VALUES
('Оборудование', 250000.00, 4);

INSERT INTO Collateral (CollateralType, EstimatedValue, Deal_DealID) VALUES
('Права на долю в компании', 600000.00, 7);

INSERT INTO Collateral (CollateralType, EstimatedValue, Deal_DealID) VALUES
('Целевые депозиты', 900000.00, 10);

INSERT INTO Collateral (CollateralType, EstimatedValue, Deal_DealID) VALUES
('Транспортное средство', 500000.00, 10);




INSERT INTO AccountBalance (BalanceAmount, BalanceDate, TransactionType, Account_AccountID) VALUES
(50000.00, TO_DATE('01-09-2023', 'DD-MM-YYYY'), 'Входящий', 1);  -- Входящий платеж, баланс увеличен

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, TransactionType, Account_AccountID) VALUES
(45000.00, TO_DATE('05-09-2023', 'DD-MM-YYYY'), 'Исходящий', 1); -- Исходящий платеж, баланс уменьшен

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, TransactionType, Account_AccountID) VALUES
(55000.00, TO_DATE('10-09-2023', 'DD-MM-YYYY'), 'Входящий', 1);  -- Входящий платеж, баланс увеличен


-- Для счета AccountID 2
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, TransactionType, Account_AccountID) VALUES
(100000.00, TO_DATE('01-09-2023', 'DD-MM-YYYY'), 'Входящий', 2); -- Входящий платеж, баланс увеличен

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, TransactionType, Account_AccountID) VALUES
(95000.00, TO_DATE('03-09-2023', 'DD-MM-YYYY'), 'Исходящий', 2); -- Исходящий платеж, баланс уменьшен

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, TransactionType, Account_AccountID) VALUES
(120000.00, TO_DATE('10-09-2023', 'DD-MM-YYYY'), 'Входящий', 2); -- Входящий платеж, баланс увеличен

-- Для счета AccountID 3

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, TransactionType, Account_AccountID) VALUES
(200000.00, TO_DATE('05-09-2023', 'DD-MM-YYYY'), 'Входящий', 3); -- Входящий платеж, баланс увеличен

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, TransactionType, Account_AccountID) VALUES
(180000.00, TO_DATE('07-09-2023', 'DD-MM-YYYY'), 'Исходящий', 3); -- Исходящий платеж, баланс уменьшен

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, TransactionType, Account_AccountID) VALUES
(230000.00, TO_DATE('12-09-2023', 'DD-MM-YYYY'), 'Входящий', 3); -- Входящий платеж, баланс увеличен

-- Для счета AccountID 4

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, TransactionType, Account_AccountID) VALUES
(80000.00, TO_DATE('01-09-2023', 'DD-MM-YYYY'), 'Входящий', 4); -- Входящий платеж, баланс увеличен



SELECT * FROM accountbalance a ;

SELECT * FROM deal;


INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-02-2021', 'DD-MM-YYYY'), 7491.65, 1783.56, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-03-2021', 'DD-MM-YYYY'), 7724.59, 1550.62, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-04-2021', 'DD-MM-YYYY'), 7627.34, 1647.87, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-05-2021', 'DD-MM-YYYY'), 7746.33, 1528.88, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-06-2021', 'DD-MM-YYYY'), 7764.44, 1510.77, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-07-2021', 'DD-MM-YYYY'), 7880.19, 1395.02, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-08-2021', 'DD-MM-YYYY'), 7903.96, 1371.25, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-09-2021', 'DD-MM-YYYY'), 7974.45, 1300.76, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-10-2021', 'DD-MM-YYYY'), 8085.23, 1189.98, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-11-2021', 'DD-MM-YYYY'), 8117.66, 1157.55, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-12-2021', 'DD-MM-YYYY'), 8225.06, 1050.15, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-01-2022', 'DD-MM-YYYY'), 8263.40, 1011.81, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-02-2022', 'DD-MM-YYYY'), 8337.09, 938.12, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-03-2022', 'DD-MM-YYYY'), 8495.03, 780.18, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-04-2022', 'DD-MM-YYYY'), 8487.20, 788.01, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-05-2022', 'DD-MM-YYYY'), 8585.87, 689.34, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-06-2022', 'DD-MM-YYYY'), 8639.45, 635.76, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-07-2022', 'DD-MM-YYYY'), 8734.52, 540.69, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-08-2022', 'DD-MM-YYYY'), 8794.39, 480.82, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-09-2022', 'DD-MM-YYYY'), 8872.82, 402.39, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-10-2022', 'DD-MM-YYYY'), 8962.37, 312.84, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-11-2022', 'DD-MM-YYYY'), 9031.87, 243.34, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-12-2022', 'DD-MM-YYYY'), 9117.67, 157.54, 1);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-01-2023', 'DD-MM-YYYY'), 9137.42, 81.49, 1);

SELECT * FROM PAYMENTSCHEDULE p;


INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-06-2021', 'DD-MM-YYYY'), 5943.51, 2123.29, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-07-2021', 'DD-MM-YYYY'), 6060.86, 2005.94, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-08-2021', 'DD-MM-YYYY'), 6045.47, 2021.33, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-09-2021', 'DD-MM-YYYY'), 6096.81, 1969.99, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-10-2021', 'DD-MM-YYYY'), 6210.47, 1856.33, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-11-2021', 'DD-MM-YYYY'), 6201.34, 1865.46, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-12-2021', 'DD-MM-YYYY'), 6312.49, 1754.31, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-01-2022', 'DD-MM-YYYY'), 6307.62, 1759.18, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-02-2022', 'DD-MM-YYYY'), 6361.19, 1705.61, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-03-2022', 'DD-MM-YYYY'), 6575.05, 1491.75, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-04-2022', 'DD-MM-YYYY'), 6471.06, 1595.74, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-05-2022', 'DD-MM-YYYY'), 6575.72, 1491.08, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-06-2022', 'DD-MM-YYYY'), 6581.87, 1484.93, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-07-2022', 'DD-MM-YYYY'), 6683.87, 1382.93, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-08-2022', 'DD-MM-YYYY'), 6694.54, 1372.26, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-09-2022', 'DD-MM-YYYY'), 6751.40, 1315.40, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-10-2022', 'DD-MM-YYYY'), 6849.32, 1217.48, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-11-2022', 'DD-MM-YYYY'), 6866.91, 1199.89, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-12-2022', 'DD-MM-YYYY'), 6962.06, 1104.74, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-01-2023', 'DD-MM-YYYY'), 6984.36, 1082.44, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-02-2023', 'DD-MM-YYYY'), 7043.68, 1023.12, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-03-2023', 'DD-MM-YYYY'), 7196.73, 870.07, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-04-2023', 'DD-MM-YYYY'), 7164.63, 902.17, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-05-2023', 'DD-MM-YYYY'), 7252.62, 814.18, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-06-2023', 'DD-MM-YYYY'), 7287.07, 779.73, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-07-2023', 'DD-MM-YYYY'), 7372.12, 694.68, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-08-2023', 'DD-MM-YYYY'), 7411.58, 655.22, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-09-2023', 'DD-MM-YYYY'), 7474.52, 592.28, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-10-2023', 'DD-MM-YYYY'), 7555.06, 511.74, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-11-2023', 'DD-MM-YYYY'), 7602.17, 464.63, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-12-2023', 'DD-MM-YYYY'), 7679.64, 387.16, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-01-2024', 'DD-MM-YYYY'), 7732.55, 334.25, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-02-2024', 'DD-MM-YYYY'), 7798.37, 268.43, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-03-2024', 'DD-MM-YYYY'), 7877.48, 189.32, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-04-2024', 'DD-MM-YYYY'), 7931.15, 135.65, 4);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('20-05-2024', 'DD-MM-YYYY'), 8084.71, 66.27, 4);

SELECT * FROM deal;

COMMIT;

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-01-2023', 'DD-MM-YYYY'), 7189.33, 2420.55, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('28-02-2023', 'DD-MM-YYYY'), 7399.76, 2210.12, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-03-2023', 'DD-MM-YYYY'), 7381.33, 2228.55, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-04-2023', 'DD-MM-YYYY'), 7366.60, 2243.28, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-05-2023', 'DD-MM-YYYY'), 7496.48, 2113.40, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-06-2023', 'DD-MM-YYYY'), 7486.52, 2123.36, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-07-2023', 'DD-MM-YYYY'), 7613.47, 1996.41, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-08-2023', 'DD-MM-YYYY'), 7608.36, 2001.52, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-09-2023', 'DD-MM-YYYY'), 7669.75, 1940.13, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-10-2023', 'DD-MM-YYYY'), 7792.22, 1817.66, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-11-2023', 'DD-MM-YYYY'), 7794.50, 1815.38, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-12-2023', 'DD-MM-YYYY'), 7913.92, 1695.96, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-01-2024', 'DD-MM-YYYY'), 7925.71, 1684.17, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('29-02-2024', 'DD-MM-YYYY'), 8041.90, 1567.98, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-03-2024', 'DD-MM-YYYY'), 8104.52, 1505.36, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-04-2024', 'DD-MM-YYYY'), 8119.55, 1490.33, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-05-2024', 'DD-MM-YYYY'), 8230.85, 1379.03, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-06-2024', 'DD-MM-YYYY'), 8251.11, 1358.77, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-07-2024', 'DD-MM-YYYY'), 8359.20, 1250.68, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-08-2024', 'DD-MM-YYYY'), 8384.77, 1225.11, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-09-2024', 'DD-MM-YYYY'), 8452.24, 1157.64, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-10-2024', 'DD-MM-YYYY'), 8555.40, 1054.48, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-11-2024', 'DD-MM-YYYY'), 8589.09, 1020.79, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-12-2024', 'DD-MM-YYYY'), 8688.90, 920.98, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-01-2025', 'DD-MM-YYYY'), 8725.78, 884.10, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('28-02-2025', 'DD-MM-YYYY'), 8848.60, 761.28, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-03-2025', 'DD-MM-YYYY'), 8891.44, 718.44, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-04-2025', 'DD-MM-YYYY'), 8939.24, 670.64, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-05-2025', 'DD-MM-YYYY'), 9030.67, 579.21, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-06-2025', 'DD-MM-YYYY'), 9084.23, 525.65, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-07-2025', 'DD-MM-YYYY'), 9172.12, 437.76, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-08-2025', 'DD-MM-YYYY'), 9231.53, 378.35, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-09-2025', 'DD-MM-YYYY'), 9306.01, 303.87, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-10-2025', 'DD-MM-YYYY'), 9388.48, 221.40, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-11-2025', 'DD-MM-YYYY'), 9456.85, 153.03, 7);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('30-12-2025', 'DD-MM-YYYY'), 9509.57, 74.25, 7);






INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-07-2022', 'DD-MM-YYYY'), 9722.22, 3452.05, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-08-2022', 'DD-MM-YYYY'), 9722.22, 3468.04, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-09-2022', 'DD-MM-YYYY'), 9722.22, 3368.95, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-10-2022', 'DD-MM-YYYY'), 9722.22, 3164.38, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-11-2022', 'DD-MM-YYYY'), 9722.22, 3170.78, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-12-2022', 'DD-MM-YYYY'), 9722.22, 2972.60, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-01-2023', 'DD-MM-YYYY'), 9722.22, 2972.60, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-02-2023', 'DD-MM-YYYY'), 9722.22, 2873.52, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-03-2023', 'DD-MM-YYYY'), 9722.22, 2505.94, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-04-2023', 'DD-MM-YYYY'), 9722.22, 2675.34, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-05-2023', 'DD-MM-YYYY'), 9722.22, 2493.15, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-06-2023', 'DD-MM-YYYY'), 9722.22, 2477.17, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-07-2023', 'DD-MM-YYYY'), 9722.22, 2301.37, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-08-2023', 'DD-MM-YYYY'), 9722.22, 2279.00, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-09-2023', 'DD-MM-YYYY'), 9722.22, 2179.91, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-10-2023', 'DD-MM-YYYY'), 9722.22, 2013.70, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-11-2023', 'DD-MM-YYYY'), 9722.22, 1981.74, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-12-2023', 'DD-MM-YYYY'), 9722.22, 1821.92, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-01-2024', 'DD-MM-YYYY'), 9722.22, 1783.40, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-02-2024', 'DD-MM-YYYY'), 9722.22, 1679.87, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-03-2024', 'DD-MM-YYYY'), 9722.22, 1479.05, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-04-2024', 'DD-MM-YYYY'), 9722.22, 1482.24, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-05-2024', 'DD-MM-YYYY'), 9722.22, 1338.80, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-06-2024', 'DD-MM-YYYY'), 9722.22, 1284.61, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-07-2024', 'DD-MM-YYYY'), 9722.22, 1147.54, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-08-2024', 'DD-MM-YYYY'), 9722.22, 1086.98, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-09-2024', 'DD-MM-YYYY'), 9722.22, 988.16, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-10-2024', 'DD-MM-YYYY'), 9722.22, 860.66, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-11-2024', 'DD-MM-YYYY'), 9722.22, 790.53, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-12-2024', 'DD-MM-YYYY'), 9722.22, 669.40, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-01-2025', 'DD-MM-YYYY'), 9722.22, 592.95, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-02-2025', 'DD-MM-YYYY'), 9722.22, 495.43, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-03-2025', 'DD-MM-YYYY'), 9722.22, 357.99, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-04-2025', 'DD-MM-YYYY'), 9722.22, 297.26, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-05-2025', 'DD-MM-YYYY'), 9722.22, 191.78, 10);

INSERT INTO PaymentSchedule (DueDate, PrincpalPayment, InterestPayment, Deal_DealID) 
VALUES (TO_DATE('01-06-2025', 'DD-MM-YYYY'), 9722.30, 99.09, 10);

COMMIT;


SELECT * FROM ACCOUNT a ;

SELECT * FROM ACCOUNTDEAL a ;

SELECT * FROM ACCOUNTBALANCE a;

SELECT * FROM deal;


-- Счёт основного долга
INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, AccountStatus, Client_ClientID) 
VALUES ('Счёт основного долга', 40817810000000000001, 'RUB', TO_DATE('01-01-2021', 'DD-MM-YYYY'), 'Активный', 1);

-- Счёт процентов
INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, AccountStatus, Client_ClientID) 
VALUES ('Счёт процентов', 40817820000000000002, 'RUB', TO_DATE('01-01-2021', 'DD-MM-YYYY'), 'Активный', 1);

-- Счёт для штрафов и неустоек
INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, AccountStatus, Client_ClientID) 
VALUES ('Счёт для штрафов и неустоек', 40817830000000000003, 'RUB', TO_DATE('01-01-2021', 'DD-MM-YYYY'), 'Активный', 1);

-- Резервный счёт
INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, AccountStatus, Client_ClientID) 
VALUES ('Резервный счёт', 40817840000000000004, 'RUB', TO_DATE('01-01-2021', 'DD-MM-YYYY'), 'Активный', 1);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, AccountStatus, Client_ClientID) 
VALUES ('Резервный счёт', 40817840000000000005, 'RUB', TO_DATE('20-05-2021', 'DD-MM-YYYY'), 'Активный', 1);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, AccountStatus, Client_ClientID) 
VALUES ('Счёт для штрафов и неустоек', 40817830000000000006, 'RUB', TO_DATE('20-05-2021', 'DD-MM-YYYY'), 'Активный', 1);

INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, AccountStatus, Client_ClientID) 
VALUES ('Счёт основного долга', 40817810000000000007, 'RUB', TO_DATE('20-05-2021', 'DD-MM-YYYY'), 'Активный', 1);

-- Счёт процентов
INSERT INTO Account (AccountType, AccountNumber, AccountCurrency, OpenDate, AccountStatus, Client_ClientID) 
VALUES ('Счёт процентов', 40817820000000000008, 'RUB', TO_DATE('20-05-2021', 'DD-MM-YYYY'), 'Активный', 1);


SELECT * FROM deal;

SELECT * FROM ACCOUNT a ;

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-02-2021', 'DD-MM-YYYY'), 50000.00, 14);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-02-2021', 'DD-MM-YYYY'), 0.00, 13);



-- Остатки по основному долгу для Account_AccountID = 11 (основной долг)
INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-02-2021', 'DD-MM-YYYY'), 192508.35, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-03-2021', 'DD-MM-YYYY'), 184783.76, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-04-2021', 'DD-MM-YYYY'), 177156.42, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-05-2021', 'DD-MM-YYYY'), 169410.09, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-06-2021', 'DD-MM-YYYY'), 161645.65, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-07-2021', 'DD-MM-YYYY'), 153765.46, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-08-2021', 'DD-MM-YYYY'), 145861.50, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-09-2021', 'DD-MM-YYYY'), 137887.05, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-10-2021', 'DD-MM-YYYY'), 129801.82, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-11-2021', 'DD-MM-YYYY'), 121684.16, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-12-2021', 'DD-MM-YYYY'), 113459.10, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-01-2022', 'DD-MM-YYYY'), 105195.70, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-02-2022', 'DD-MM-YYYY'), 96858.61, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-03-2022', 'DD-MM-YYYY'), 88363.58, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-04-2022', 'DD-MM-YYYY'), 79876.38, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-05-2022', 'DD-MM-YYYY'), 71290.51, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-06-2022', 'DD-MM-YYYY'), 62651.06, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-07-2022', 'DD-MM-YYYY'), 53916.54, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-08-2022', 'DD-MM-YYYY'), 45122.15, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-09-2022', 'DD-MM-YYYY'), 36249.33, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-10-2022', 'DD-MM-YYYY'), 27286.96, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-11-2022', 'DD-MM-YYYY'), 18255.09, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-12-2022', 'DD-MM-YYYY'), 9137.42, 11);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-01-2023', 'DD-MM-YYYY'), 0.00, 11);

SELECT * FROM DEAL d;

-- Остатки по процентам для Account_AccountID = 12 (проценты)
INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-02-2021', 'DD-MM-YYYY'), 1783.56, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-03-2021', 'DD-MM-YYYY'), 1550.62, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-04-2021', 'DD-MM-YYYY'), 1647.87, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-05-2021', 'DD-MM-YYYY'), 1528.88, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-06-2021', 'DD-MM-YYYY'), 1510.77, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-07-2021', 'DD-MM-YYYY'), 1395.02, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-08-2021', 'DD-MM-YYYY'), 1371.25, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-09-2021', 'DD-MM-YYYY'), 1300.76, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-10-2021', 'DD-MM-YYYY'), 1189.98, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-11-2021', 'DD-MM-YYYY'), 1157.55, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-12-2021', 'DD-MM-YYYY'), 1050.15, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-01-2022', 'DD-MM-YYYY'), 1011.81, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-02-2022', 'DD-MM-YYYY'), 938.12, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-03-2022', 'DD-MM-YYYY'), 780.18, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-04-2022', 'DD-MM-YYYY'), 788.01, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-05-2022', 'DD-MM-YYYY'), 689.34, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-06-2022', 'DD-MM-YYYY'), 635.76, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-07-2022', 'DD-MM-YYYY'), 540.69, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-08-2022', 'DD-MM-YYYY'), 480.82, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-09-2022', 'DD-MM-YYYY'), 402.39, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-10-2022', 'DD-MM-YYYY'), 312.84, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-11-2022', 'DD-MM-YYYY'), 243.34, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-12-2022', 'DD-MM-YYYY'), 157.54, 12);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-01-2023', 'DD-MM-YYYY'), 81.49, 12);


-- Обновление для 01.02.2021
UPDATE AccountBalance 
SET BalanceAmount = 20765.18 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2021-02-01', 'YYYY-MM-DD');

-- Обновление для 01.03.2021
UPDATE AccountBalance 
SET BalanceAmount = 19214.56 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2021-03-01', 'YYYY-MM-DD');

-- Обновление для 01.04.2021
UPDATE AccountBalance 
SET BalanceAmount = 17566.69 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2021-04-01', 'YYYY-MM-DD');

-- Обновление для 01.05.2021
UPDATE AccountBalance 
SET BalanceAmount = 16037.81 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2021-05-01', 'YYYY-MM-DD');

-- Обновление для 01.06.2021
UPDATE AccountBalance 
SET BalanceAmount = 14527.04 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2021-06-01', 'YYYY-MM-DD');

-- Обновление для 01.07.2021
UPDATE AccountBalance 
SET BalanceAmount = 13132.02 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2021-07-01', 'YYYY-MM-DD');

-- Обновление для 01.08.2021
UPDATE AccountBalance 
SET BalanceAmount = 11760.77 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2021-08-01', 'YYYY-MM-DD');

-- Обновление для 01.09.2021
UPDATE AccountBalance 
SET BalanceAmount = 10460.01 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2021-09-01', 'YYYY-MM-DD');

-- Обновление для 01.10.2021
UPDATE AccountBalance 
SET BalanceAmount = 9270.03 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2021-10-01', 'YYYY-MM-DD');

-- Обновление для 01.11.2021
UPDATE AccountBalance 
SET BalanceAmount = 8112.48 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2021-11-01', 'YYYY-MM-DD');

-- Обновление для 01.12.2021
UPDATE AccountBalance 
SET BalanceAmount = 7062.33 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2021-12-01', 'YYYY-MM-DD');

-- Обновление для 01.01.2022
UPDATE AccountBalance 
SET BalanceAmount = 6050.52 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2022-01-01', 'YYYY-MM-DD');

-- Обновление для 01.02.2022
UPDATE AccountBalance 
SET BalanceAmount = 5112.40 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2022-02-01', 'YYYY-MM-DD');

-- Обновление для 01.03.2022
UPDATE AccountBalance 
SET BalanceAmount = 4332.22 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2022-03-01', 'YYYY-MM-DD');

-- Обновление для 01.04.2022
UPDATE AccountBalance 
SET BalanceAmount = 3544.21 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2022-04-01', 'YYYY-MM-DD');

-- Обновление для 01.05.2022
UPDATE AccountBalance 
SET BalanceAmount = 2854.87 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2022-05-01', 'YYYY-MM-DD');

-- Обновление для 01.06.2022
UPDATE AccountBalance 
SET BalanceAmount = 2219.11 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2022-06-01', 'YYYY-MM-DD');

-- Обновление для 01.07.2022
UPDATE AccountBalance 
SET BalanceAmount = 1678.42 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2022-07-01', 'YYYY-MM-DD');

-- Обновление для 01.08.2022
UPDATE AccountBalance 
SET BalanceAmount = 1197.60 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2022-08-01', 'YYYY-MM-DD');

-- Обновление для 01.09.2022
UPDATE AccountBalance 
SET BalanceAmount = 795.21 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2022-09-01', 'YYYY-MM-DD');

-- Обновление для 01.10.2022
UPDATE AccountBalance 
SET BalanceAmount = 482.37 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2022-10-01', 'YYYY-MM-DD');

-- Обновление для 01.11.2022
UPDATE AccountBalance 
SET BalanceAmount = 239.03 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2022-11-01', 'YYYY-MM-DD');

-- Обновление для 01.12.2022
UPDATE AccountBalance 
SET BalanceAmount = 81.49 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2022-12-01', 'YYYY-MM-DD');

-- Обновление для 01.01.2023
UPDATE AccountBalance 
SET BalanceAmount = 0.00 
WHERE Account_AccountID = 12 AND BalanceDate = TO_DATE('2023-01-01', 'YYYY-MM-DD');


COMMIT;


-- Остатки по текущему счёту (Account_AccountID = 1)
INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-02-2021', 'DD-MM-YYYY'), 50000 - 9275.21, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-03-2021', 'DD-MM-YYYY'), 50000 - 9275.21 + (50000 - 9275.21), 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-04-2021', 'DD-MM-YYYY'), (50000 - 9275.21) * 3, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-05-2021', 'DD-MM-YYYY'), (50000 - 9275.21) * 4, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-06-2021', 'DD-MM-YYYY'), (50000 - 9275.21) * 5, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-07-2021', 'DD-MM-YYYY'), (50000 - 9275.21) * 6, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-08-2021', 'DD-MM-YYYY'), (50000 - 9275.21) * 7, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-09-2021', 'DD-MM-YYYY'), (50000 - 9275.21) * 8, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-10-2021', 'DD-MM-YYYY'), (50000 - 9275.21) * 9, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-11-2021', 'DD-MM-YYYY'), (50000 - 9275.21) * 10, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-12-2021', 'DD-MM-YYYY'), (50000 - 9275.21) * 11, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-01-2022', 'DD-MM-YYYY'), (50000 - 9275.21) * 12, 1);

-- Продолжаем до конца периода
INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-02-2022', 'DD-MM-YYYY'), (50000 - 9275.21) * 13, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-03-2022', 'DD-MM-YYYY'), (50000 - 9275.21) * 14, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-04-2022', 'DD-MM-YYYY'), (50000 - 9275.21) * 15, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-05-2022', 'DD-MM-YYYY'), (50000 - 9275.21) * 16, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-06-2022', 'DD-MM-YYYY'), (50000 - 9275.21) * 17, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-07-2022', 'DD-MM-YYYY'), (50000 - 9275.21) * 18, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-08-2022', 'DD-MM-YYYY'), (50000 - 9275.21) * 19, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-09-2022', 'DD-MM-YYYY'), (50000 - 9275.21) * 20, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-10-2022', 'DD-MM-YYYY'), (50000 - 9275.21) * 21, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-11-2022', 'DD-MM-YYYY'), (50000 - 9275.21) * 22, 1);

INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-12-2022', 'DD-MM-YYYY'), (50000 - 9275.21) * 23, 1);

-- Последний месяц с изменённым платежом
INSERT INTO AccountBalance (BalanceDate, BalanceAmount, Account_AccountID)
VALUES (TO_DATE('01-01-2023', 'DD-MM-YYYY'), (50000 - 9218.91) + ((50000 - 9275.21) * 23), 1);

COMMIT;

--По счету основного долга (Account_AccountID = 23)
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (244056.49, TO_DATE('20.06.2021', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (237995.63, TO_DATE('20.07.2021', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (231950.16, TO_DATE('20.08.2021', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (225853.35, TO_DATE('20.09.2021', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (219642.88, TO_DATE('20.10.2021', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (213441.54, TO_DATE('20.11.2021', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (207129.05, TO_DATE('20.12.2021', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (200821.43, TO_DATE('20.01.2022', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (194460.24, TO_DATE('20.02.2022', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (187885.19, TO_DATE('20.03.2022', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (181414.13, TO_DATE('20.04.2022', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (174838.41, TO_DATE('20.05.2022', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (168256.54, TO_DATE('20.06.2022', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (161572.67, TO_DATE('20.07.2022', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (154878.13, TO_DATE('20.08.2022', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (148126.73, TO_DATE('20.09.2022', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (141277.41, TO_DATE('20.10.2022', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (134410.50, TO_DATE('20.11.2022', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (127448.44, TO_DATE('20.12.2022', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (120464.08, TO_DATE('20.01.2023', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (113420.40, TO_DATE('20.02.2023', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (106223.67, TO_DATE('20.03.2023', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (99059.04, TO_DATE('20.04.2023', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (91806.42, TO_DATE('20.05.2023', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (84519.35, TO_DATE('20.06.2023', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (77147.23, TO_DATE('20.07.2023', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (69735.65, TO_DATE('20.08.2023', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (62261.13, TO_DATE('20.09.2023', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (54706.07, TO_DATE('20.10.2023', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (47103.90, TO_DATE('20.11.2023', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (39424.26, TO_DATE('20.12.2023', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (31691.71, TO_DATE('20.01.2024', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (23893.34, TO_DATE('20.02.2024', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (16015.86, TO_DATE('20.03.2024', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (8084.71, TO_DATE('20.04.2024', 'DD.MM.YYYY'), 23);

INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (0.00, TO_DATE('20.05.2024', 'DD.MM.YYYY'), 23);


--запросы для вставки данных по счету основного долга (Account_AccountID = 24)
-- Июнь 2021
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (38365.69, TO_DATE('20.06.2021', 'DD.MM.YYYY'), 24);

-- Июль 2021
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (36359.75, TO_DATE('20.07.2021', 'DD.MM.YYYY'), 24);

-- Август 2021
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (34338.42, TO_DATE('20.08.2021', 'DD.MM.YYYY'), 24);

-- Сентябрь 2021
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (32368.43, TO_DATE('20.09.2021', 'DD.MM.YYYY'), 24);

-- Октябрь 2021
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (30512.10, TO_DATE('20.10.2021', 'DD.MM.YYYY'), 24);

-- Ноябрь 2021
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (28646.64, TO_DATE('20.11.2021', 'DD.MM.YYYY'), 24);

-- Декабрь 2021
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (26892.33, TO_DATE('20.12.2021', 'DD.MM.YYYY'), 24);

-- Январь 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (25133.15, TO_DATE('20.01.2022', 'DD.MM.YYYY'), 24);

-- Февраль 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (23427.54, TO_DATE('20.02.2022', 'DD.MM.YYYY'), 24);

-- Март 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (21935.79, TO_DATE('20.03.2022', 'DD.MM.YYYY'), 24);

-- Апрель 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (20340.05, TO_DATE('20.04.2022', 'DD.MM.YYYY'), 24);

-- Май 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (18848.97, TO_DATE('20.05.2022', 'DD.MM.YYYY'), 24);

-- Июнь 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (17364.04, TO_DATE('20.06.2022', 'DD.MM.YYYY'), 24);

-- Июль 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (15981.11, TO_DATE('20.07.2022', 'DD.MM.YYYY'), 24);

-- Август 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (14608.85, TO_DATE('20.08.2022', 'DD.MM.YYYY'), 24);

-- Сентябрь 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (13293.45, TO_DATE('20.09.2022', 'DD.MM.YYYY'), 24);

-- Октябрь 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (12075.97, TO_DATE('20.10.2022', 'DD.MM.YYYY'), 24);

-- Ноябрь 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (10876.08, TO_DATE('20.11.2022', 'DD.MM.YYYY'), 24);

-- Декабрь 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (9771.34, TO_DATE('20.12.2022', 'DD.MM.YYYY'), 24);

-- Январь 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (8688.90, TO_DATE('20.01.2023', 'DD.MM.YYYY'), 24);

-- Февраль 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (7665.78, TO_DATE('20.02.2023', 'DD.MM.YYYY'), 24);

-- Март 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (6795.71, TO_DATE('20.03.2023', 'DD.MM.YYYY'), 24);

-- Апрель 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (5893.54, TO_DATE('20.04.2023', 'DD.MM.YYYY'), 24);

-- Май 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (5079.36, TO_DATE('20.05.2023', 'DD.MM.YYYY'), 24);

-- Июнь 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (4299.63, TO_DATE('20.06.2023', 'DD.MM.YYYY'), 24);

-- Июль 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (3604.95, TO_DATE('20.07.2023', 'DD.MM.YYYY'), 24);

-- Август 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (2949.73, TO_DATE('20.08.2023', 'DD.MM.YYYY'), 24);

-- Сентябрь 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (2357.45, TO_DATE('20.09.2023', 'DD.MM.YYYY'), 24);

-- Октябрь 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (1845.71, TO_DATE('20.10.2023', 'DD.MM.YYYY'), 24);

-- Ноябрь 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (1381.08, TO_DATE('20.11.2023', 'DD.MM.YYYY'), 24);

-- Декабрь 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (993.92, TO_DATE('20.12.2023', 'DD.MM.YYYY'), 24);

-- Январь 2024
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (659.67, TO_DATE('20.01.2024', 'DD.MM.YYYY'), 24);

-- Февраль 2024
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (391.24, TO_DATE('20.02.2024', 'DD.MM.YYYY'), 24);

-- Март 2024
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (201.92, TO_DATE('20.03.2024', 'DD.MM.YYYY'), 24);

-- Апрель 2024
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (66.27, TO_DATE('20.04.2024', 'DD.MM.YYYY'), 24);

-- Май 2024
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID)
VALUES (0.00, TO_DATE('20.05.2024', 'DD.MM.YYYY'), 24);

INSERT INTO ACCOUNTBALANCE (ACCOUNT_ACCOUNTID, BALANCEAMOUNT, BalanceDate)
VALUES (21, 125000.00, TO_DATE('20-06-2021', 'DD-MM-YYYY'));


--ткекущий счет 1
-- Начальный остаток на 20-06-2021 (после первого платежа по кредиту)
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99, TO_DATE('2021-06-20', 'YYYY-MM-DD'), 1);

-- Июль 2021
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80, TO_DATE('2021-07-20', 'YYYY-MM-DD'), 1);

-- Август 2021
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2021-08-20', 'YYYY-MM-DD'), 1);

-- Сентябрь 2021
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2021-09-20', 'YYYY-MM-DD'), 1);

-- Октябрь 2021
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2021-10-20', 'YYYY-MM-DD'), 1);

-- Ноябрь 2021
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2021-11-20', 'YYYY-MM-DD'), 1);

-- Декабрь 2021
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2021-12-20', 'YYYY-MM-DD'), 1);

-- Январь 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2022-01-20', 'YYYY-MM-DD'), 1);

-- Февраль 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2022-02-20', 'YYYY-MM-DD'), 1);

-- Март 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2022-03-20', 'YYYY-MM-DD'), 1);

-- Апрель 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2022-04-20', 'YYYY-MM-DD'), 1);

-- Май 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2022-05-20', 'YYYY-MM-DD'), 1);

-- Июнь 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2022-06-20', 'YYYY-MM-DD'), 1);

-- Июль 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2022-07-20', 'YYYY-MM-DD'), 1);

-- Август 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2022-08-20', 'YYYY-MM-DD'), 1);

-- Сентябрь 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2022-09-20', 'YYYY-MM-DD'), 1);

-- Октябрь 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2022-10-20', 'YYYY-MM-DD'), 1);

-- Ноябрь 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2022-11-20', 'YYYY-MM-DD'), 1);

-- Декабрь 2022
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2022-12-20', 'YYYY-MM-DD'), 1);

-- Январь 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2023-01-20', 'YYYY-MM-DD'), 1);

-- Февраль 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2023-02-20', 'YYYY-MM-DD'), 1);

-- Март 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2023-03-20', 'YYYY-MM-DD'), 1);

-- Апрель 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2023-04-20', 'YYYY-MM-DD'), 1);

-- Май 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2023-05-20', 'YYYY-MM-DD'), 1);

-- Июнь 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2023-06-20', 'YYYY-MM-DD'), 1);

-- Июль 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2023-07-20', 'YYYY-MM-DD'), 1);

-- Август 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2023-08-20', 'YYYY-MM-DD'), 1);

-- Сентябрь 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2023-09-20', 'YYYY-MM-DD'), 1);

-- Октябрь 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2023-10-20', 'YYYY-MM-DD'), 1);

-- Ноябрь 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2023-11-20', 'YYYY-MM-DD'), 1);

-- Декабрь 2023
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2023-12-20', 'YYYY-MM-DD'), 1);

-- Январь 2024
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2024-01-20', 'YYYY-MM-DD'), 1);

-- Февраль 2024
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80, TO_DATE('2024-02-20', 'YYYY-MM-DD'), 1);

-- Март 2024
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8150.98, TO_DATE('2024-03-20', 'YYYY-MM-DD'), 1);

-- Апрель 2024
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8150.98, TO_DATE('2024-04-20', 'YYYY-MM-DD'), 1);

-- Май 2024 (последний платеж по кредиту)
INSERT INTO AccountBalance (BalanceAmount, BalanceDate, Account_AccountID) VALUES (32657.99 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8066.80 + 50000 - 8150.98, TO_DATE('2024-05-20', 'YYYY-MM-DD'), 1);

COMMIT;

--обновление таблиц
DELETE FROM ACCOUNTDEAL a
WHERE accountdealid = 4;

UPDATE ACCOUNT 
SET ACCOUNTSTATUS = 'Активный'
WHERE ACCOUNTID = 7;

UPDATE ACCOUNT 
SET ACCOUNTTYPE = 'Текущий счёт'
WHERE ACCOUNTID = 10;
COMMIT;
--конец обновления таблиц


-- витрина по филиалам
WITH CountClient AS(
SELECT b.BRANCHID,
b.BRANCH_NAME,
b.BRANCH_ADDRESS,
COUNT( DISTINCT c.CLIENTID) COUNT_CLIENT
FROM INTERN_TEAM2.BRANCH b 
JOIN INTERN_TEAM2.DEAL d 
ON b.BRANCHID = d.BRANCH_BRANCHID 
 JOIN INTERN_TEAM2.ACCOUNTDEAL ad 
ON d.DEALID = ad.DEAL_DEAL_ID 
 JOIN INTERN_TEAM2.ACCOUNT a 
ON a.ACCOUNTID = ad.ACCOUNT_ACCOUNTID 
 JOIN INTERN_TEAM2.CLIENT c 
ON c.CLIENTID = a.CLIENT_CLIENTID
GROUP BY 
b.BRANCHID,
b.BRANCH_NAME,
b.BRANCH_ADDRESS
),
CountActiveDeal AS(
SELECT b.BRANCHID,
b.BRANCH_NAME,
b.BRANCH_ADDRESS,
COUNT(d.DEALID) COUNT_ACTIVE_DEAL
FROM INTERN_TEAM2.BRANCH b 
JOIN INTERN_TEAM2.DEAL d 
ON b.BRANCHID = d.BRANCH_BRANCHID
WHERE d.enddate >= SYSDATE
GROUP BY 
b.BRANCHID,
b.BRANCH_NAME,
b.BRANCH_ADDRESS
),
TotalAmountOfActiveLoans as(
SELECT b.BRANCHID,
b.BRANCH_NAME,
b.BRANCH_ADDRESS,
SUM(d.DEALAMOUNT) SUM_ACTIVE_LOAN
FROM INTERN_TEAM2.BRANCH b 
JOIN INTERN_TEAM2.DEAL d 
ON b.BRANCHID = d.BRANCH_BRANCHID
WHERE d.enddate >= SYSDATE AND d.DEALTYPE = 'Кредитные операции'
GROUP BY 
b.BRANCHID,
b.BRANCH_NAME,
b.BRANCH_ADDRESS
),
CountCompletedDeals AS (
SELECT
	b.BRANCHID,
	COUNT(d.DEALID) AS Count_Completed_Deals
FROM
	INTERN_TEAM2.BRANCH b
JOIN INTERN_TEAM2.DEAL d 
ON b.BRANCHID = d.BRANCH_BRANCHID
WHERE
	d.enddate < SYSDATE
GROUP BY
	b.BRANCHID
),
SumCompletedDeals AS (
SELECT
	b.BRANCHID,
	SUM(d.DEALAMOUNT) AS Sum_Completed_Deals
FROM
	INTERN_TEAM2.BRANCH b
JOIN 
        INTERN_TEAM2.DEAL d ON
	b.BRANCHID = d.BRANCH_BRANCHID
WHERE
	d.enddate < SYSDATE AND d.DEALTYPE = 'Кредитные операции'
GROUP BY
	b.BRANCHID
),
teast1 AS(SELECT DEAL_DEALID, SUM(p.PRINCPALPAYMENT) SUM_PRINCIPAL_PAYMENT, SUM(p.INTERESTPAYMENT) SUM_INTEREST_PAYMENT
FROM PAYMENTSCHEDULE p 
GROUP BY p.DEAL_DEALID),
test2 AS(SELECT d.DEALID, ab.ACCOUNT_ACCOUNTID, ab.BALANCEAMOUNT, ab.BALANCEDATE, a.ACCOUNTTYPE
FROM DEAL d 
JOIN ACCOUNTDEAL ad
ON d.DEALID = ad.DEAL_DEAL_ID 
JOIN ACCOUNT a 
ON ad.ACCOUNT_ACCOUNTID = a.ACCOUNTID 
JOIN ACCOUNTBALANCE ab
ON a.ACCOUNTID = ab.ACCOUNT_ACCOUNTID 
WHERE a.ACCOUNTTYPE = 'Счёт основного долга' OR a.ACCOUNTTYPE = 'Счёт процентов'),
PrincipalPaymentMade AS (SELECT
	t1.DEAL_DEALID,
	t2.ACCOUNT_ACCOUNTID,
	t2.BALANCEDATE,
	CASE 
        -- Для первой строки: TOTAL_SUM_PRINCIPAL_PAYMENT - BALANCEAMOUNT
        WHEN ROW_NUMBER() OVER (PARTITION BY DEAL_DEALID ORDER BY BALANCEDATE) = 1 THEN 
            t1.SUM_PRINCIPAL_PAYMENT - t2.BALANCEAMOUNT
        -- Для остальных строк: разница между предыдущим и текущим BALANCEAMOUNT
        ELSE LAG(t2.BALANCEAMOUNT) OVER (PARTITION BY t1.DEAL_DEALID ORDER BY t2.ACCOUNT_ACCOUNTID, t2.BALANCEDATE) - t2.BALANCEAMOUNT
    END AS PRINCIPAL_PAYMENT_MADE
FROM
	teast1 t1
JOIN test2 t2
ON
	t1.DEAL_DEALID = t2.DEALID
WHERE t2.ACCOUNTTYPE = 'Счёт основного долга'),
InterestPaymentMade AS (SELECT
	t1.DEAL_DEALID,
	t2.ACCOUNT_ACCOUNTID,
	t2.BALANCEDATE,
	CASE 
        -- Для первой строки: TOTAL_SUM_INTEREST_PAYMENT - BALANCEAMOUNT
        WHEN ROW_NUMBER() OVER (PARTITION BY DEAL_DEALID ORDER BY BALANCEDATE) = 1 THEN 
            t1.SUM_INTEREST_PAYMENT - t2.BALANCEAMOUNT
        -- Для остальных строк: разница между предыдущим и текущим BALANCEAMOUNT
        ELSE LAG(t2.BALANCEAMOUNT) OVER (PARTITION BY t1.DEAL_DEALID ORDER BY t2.ACCOUNT_ACCOUNTID, t2.BALANCEDATE) - t2.BALANCEAMOUNT
    END AS INTEREST_PAYMENT_MADE
FROM
	teast1 t1
JOIN test2 t2
ON
	t1.DEAL_DEALID = t2.DEALID
WHERE t2.ACCOUNTTYPE = 'Счёт процентов'),
WITH_TOTAL_PAYMENT_LOAN AS (SELECT 
    p.DEAL_DEALID,
    p.ACCOUNT_ACCOUNTID AS PRINCIPAL_ACCOUNT,
    i.ACCOUNT_ACCOUNTID AS INTEREST_ACCOUNT,
    p.BALANCEDATE,
    p.PRINCIPAL_PAYMENT_MADE,
    i.INTEREST_PAYMENT_MADE
FROM 
    PrincipalPaymentMade p
JOIN 
    InterestPaymentMade i 
ON 
    p.DEAL_DEALID = i.DEAL_DEALID
    AND p.BALANCEDATE = i.BALANCEDATE
  ORDER BY p.DEAL_DEALID, PRINCIPAL_ACCOUNT, p.BALANCEDATE),
PSchedule AS (
SELECT
	p.DEAL_DEALID,
	p.DUEDATE,
	p.PRINCPALPAYMENT,
	p.INTERESTPAYMENT
FROM
	PAYMENTSCHEDULE p),
comparisonpayments AS(SELECT
	b.BRANCHID,
	ps.DEAL_DEALID,
	ps.DUEDATE,
	ps.PRINCPALPAYMENT,
	ps.INTERESTPAYMENT,
	COALESCE(wtp.PRINCIPAL_PAYMENT_MADE,0) PRINCIPAL_PAYMENT_MADE, 
	COALESCE(wtp.INTEREST_PAYMENT_MADE,0) INTEREST_PAYMENT_MADE,
	CASE
		WHEN (ps.PRINCPALPAYMENT = wtp.PRINCIPAL_PAYMENT_MADE AND ps.INTERESTPAYMENT = wtp.INTEREST_PAYMENT_MADE AND ps.DUEDATE <= SYSDATE)
		OR (ps.DUEDATE > SYSDATE)
		THEN 1
		ELSE 0	
	END AS comparison
FROM
	PSchedule PS
LEFT JOIN WITH_TOTAL_PAYMENT_LOAN WTP
ON
	ps.DEAL_DEALID = wtp.DEAL_DEALID
	AND ps.DUEDATE = wtp.BALANCEDATE
JOIN DEAL D
ON d.DEALID = ps.DEAL_DEALID
JOIN Branch B
ON b.BRANCHID = d.BRANCH_BRANCHID 
ORDER BY
	ps.DEAL_DEALID, ps.DUEDATE),
CountOverduePayments AS(SELECT CP.BRANCHID, COUNT(CP.comparison) Count_Overdue_payments
FROM comparisonpayments cp
WHERE CP.comparison = 0
GROUP BY CP.BRANCHID),
SumOverduePayments AS(SELECT CP.BRANCHID, SUM(cp.PRINCPALPAYMENT + cp.INTERESTPAYMENT) sum_overdue_payments
FROM comparisonpayments cp
WHERE CP.comparison = 0
GROUP BY CP.BRANCHID),
InterestIncome as(SELECT CP.BRANCHID, SUM(cp.INTERESTPAYMENT) sum_interest_payments
FROM comparisonpayments cp
WHERE CP.comparison = 1 AND (cp.PRINCPALPAYMENT = cp.PRINCIPAL_PAYMENT_MADE AND cp.INTERESTPAYMENT = cp.INTEREST_PAYMENT_MADE AND cp.DUEDATE <= SYSDATE)
GROUP BY CP.BRANCHID
),
CountOverdueLoans AS (SELECT CP.BRANCHID, COUNT(DISTINCT CP.DEAL_DEALID) Count_Overdue_Loans
FROM comparisonpayments cp
WHERE CP.comparison = 0
GROUP BY CP.BRANCHID, cp.DEAL_DEALID)
SELECT 
  cc.BRANCHID AS "Идентификатор филиала", 
  cc.BRANCH_NAME "Наименование филиала",
  cc.BRANCH_ADDRESS AS "Адрес филиала",
  cc.COUNT_CLIENT AS "Количество клиентов",
  coalesce(cd.Count_Completed_Deals, 0) AS "Количество завершенных сделок всех типов",  
  coalesce(sd.Sum_Completed_Deals, 0) AS "Сумма завершенных сделок типа кредитные операции",
  COALESCE(cad.COUNT_ACTIVE_DEAL, 0) AS "Количество активных сделок всех типов",
  COALESCE(tal.SUM_ACTIVE_LOAN, 0) AS "Общий объем активных сделок типа кредитные операции",
  coalesce(col.Count_Overdue_Loans, 0) AS "Кол-во просроченных сделок типа кредитные операции",
  COALESCE(cop.Count_Overdue_payments, 0) AS "Кол-во просроченных платежей по сделкам типа кредитные операции",
  COALESCE(sop.sum_overdue_payments, 0) AS "Сумма просроченных сделок типа кредитные операции",
  COALESCE(ii.sum_interest_payments, 0) AS "Доход от процентов по сделкам типа кредитные операции",
  SYSDATE AS "Дата формирования отчета"
FROM 
  CountClient cc
LEFT JOIN 
  CountActiveDeal cad ON cc.BRANCHID = cad.BRANCHID
LEFT JOIN 
  TotalAmountOfActiveLoans tal ON cc.BRANCHID = tal.BRANCHID
LEFT JOIN 
   CountOverdueLoans col ON cc.BRANCHID = col.BRANCHID 
LEFT JOIN 
  CountOverduePayments cop ON cc.BRANCHID = cop.BRANCHID
LEFT JOIN 
  SumOverduePayments sop ON cc.BRANCHID = sop.BRANCHID
LEFT JOIN 
    CountCompletedDeals cd ON cc.BRANCHID = cd.BRANCHID  
LEFT JOIN 
    SumCompletedDeals sd ON cc.BRANCHID = sd.BRANCHID  
LEFT JOIN 
  InterestIncome ii ON cc.BRANCHID = ii.BRANCHID
ORDER BY 
  cc.BRANCH_NAME;

 UPDATE EXTERNALCREDITHISTORY 
 SET ENDDATE = TO_DATE('02.12.2024','dd.mm.yyyy') 
WHERE CLIENT_CLIENTID = 6;

 UPDATE EXTERNALCREDITHISTORY 
 SET ENDDATE = TO_DATE('02.02.2025','dd.mm.yyyy') 
WHERE CLIENT_CLIENTID = 8;
--витрина кредитного скоринга
 --определение ежемесячного платежа по внешним кредитам
WITH ExternalRemainingPayments AS (
SELECT
	ech.Client_ClientID,
	ech.BankName,
	ech.LoanAmount,
	ech.TotalPaidAmount,
	ech.RemainingBalance,
	ech.StartDate,
	ech.EndDate,
	MONTHS_BETWEEN(ech.ENDDATE, SYSDATE ) AS RemainingMonths,
	CASE
		WHEN MONTHS_BETWEEN(ech.ENDDATE, SYSDATE ) > 0
            THEN ech.RemainingBalance / 
                 MONTHS_BETWEEN(ech.ENDDATE, SYSDATE )
		WHEN MONTHS_BETWEEN(ech.ENDDATE, SYSDATE ) < 0
            THEN ech.RemainingBalance
		ELSE 0
	END AS MonthlyPayment
FROM
	ExternalCreditHistory ech
WHERE
	ech.CurrentStatus = 'Активный'
),
InternalMonthlyPayments AS(
SELECT
	(
	SELECT
		c.ClientID
	FROM
		AccountDeal ad
	JOIN Account a ON
		a.ACCOUNTID = ad.ACCOUNT_ACCOUNTID
	JOIN Client c ON
		c.ClientID = a.CLIENT_CLIENTID
	WHERE
		ad.DEAL_DEAL_ID = d.DealID
     FETCH FIRST 1 ROWS ONLY) AS ClientID,
	-- определяем клиента через подзапрос
	d.DealID,
	(SUM(ps.PrincpalPayment + ps.InterestPayment) / MONTHS_BETWEEN(d.ENDDATE, d.STARTDATE)) AS TotalMonthlyPayment
FROM
	PaymentSchedule ps
JOIN 
    Deal d ON
	ps.Deal_DealID = d.DealID
WHERE
	d.ENDDATE > SYSDATE
GROUP BY
	d.DealID, MONTHS_BETWEEN(d.ENDDATE, d.STARTDATE)
),
DTI_Calculation AS (
SELECT
	c.ClientID,
	c.MonthlyIncome,
	COALESCE(SUM(emp.MonthlyPayment), 0) AS TotalExternalMonthlyPayments,
	-- внешние платежи
        COALESCE(imp.TotalMonthlyPayment, 0) AS TotalInternalMonthlyPayments
	-- внутренние платежи
FROM
	Client c
LEFT JOIN
        ExternalRemainingPayments emp ON
	c.ClientID = emp.Client_ClientID
LEFT JOIN
        InternalMonthlyPayments imp ON
	c.ClientID = imp.ClientID
GROUP BY
	c.ClientID,
	c.MonthlyIncome,
	TotalMonthlyPayment
),
DTI AS (SELECT
	dti.ClientID,
	dti.MonthlyIncome,
	dti.TotalExternalMonthlyPayments,
	dti.TotalInternalMonthlyPayments,
	(dti.TotalExternalMonthlyPayments + dti.TotalInternalMonthlyPayments) AS TotalDebtPayments,
	(dti.TotalExternalMonthlyPayments + dti.TotalInternalMonthlyPayments) / dti.MonthlyIncome * 100 AS DTI
	-- расчет DTI в процентах
FROM
	DTI_Calculation dti
ORDER BY dti.ClientID),
DTIScoring AS (SELECT d.ClientID, d.DTI,
CASE
		WHEN d.DTI BETWEEN 0 AND 20 THEN 5
		WHEN d.DTI BETWEEN 20 AND 40 THEN 4
		WHEN d.DTI BETWEEN 40 AND 60 THEN 3
		WHEN d.DTI BETWEEN 60 AND 80 THEN 2
		WHEN d.DTI BETWEEN 80 AND 100 THEN 1
		ELSE 0
	END AS DTI_SCORE
FROM DTI d),
AgeScoring AS(
SELECT
	c.ClientID,
	TRUNC(MONTHS_BETWEEN(SYSDATE, BirthDate) / 12) AGE,
	CASE
		WHEN TRUNC(MONTHS_BETWEEN(SYSDATE, BirthDate) / 12) BETWEEN 18 AND 25 THEN 3
		WHEN TRUNC(MONTHS_BETWEEN(SYSDATE, BirthDate) / 12) BETWEEN 26 AND 35 THEN 5
		WHEN TRUNC(MONTHS_BETWEEN(SYSDATE, BirthDate) / 12) BETWEEN 36 AND 55 THEN 4
		WHEN TRUNC(MONTHS_BETWEEN(SYSDATE, BirthDate) / 12) BETWEEN 56 AND 67 THEN 3
		WHEN TRUNC(MONTHS_BETWEEN(SYSDATE, BirthDate) / 12) >= 68 AND c.GENDER = 'М' THEN 2
        WHEN TRUNC(MONTHS_BETWEEN(SYSDATE, BirthDate) / 12) >= 78 AND c.GENDER = 'Ж' THEN 2
		ELSE 0
	END AS AGE_SCORE
FROM
	CLIENT c),
MaritalScoring AS(
SELECT
	c.CLIENTID,
	c.MARITALSTATUS,
	CASE
		WHEN c.MARITALSTATUS = 'Одинок' THEN 2
		WHEN c.MARITALSTATUS = 'В браке' THEN 5
		ELSE 0
	END AS MARITAL_SCORE
FROM
	CLIENT c
),
MonthlyIncomeScoring AS(
SELECT
	c.CLIENTID,
	c.MonthlyIncome,
	CASE
		WHEN c.MONTHLYINCOME >= 100000 THEN 5
		WHEN c.MONTHLYINCOME BETWEEN 80000 AND 100000 THEN 4
		WHEN c.MONTHLYINCOME BETWEEN 60000 AND 80000 THEN 3
		WHEN c.MONTHLYINCOME BETWEEN 40000 AND 60000 THEN 2
		WHEN c.MONTHLYINCOME BETWEEN 20000 AND 40000 THEN 1
		ELSE 0
	END AS INCOME_SCORE
FROM
	CLIENT c),
CountInternalActiveLoans AS(
SELECT
	c.CLIENTID,
	count(DISTINCT d.dealid) COUNT_ACTIVE_LOAN
FROM
	CLIENT c
JOIN ACCOUNT a
ON
	c.CLIENTID = a.CLIENT_CLIENTID
JOIN ACCOUNTDEAL AD
ON
	a.ACCOUNTID = ad.ACCOUNT_ACCOUNTID
JOIN DEAL d 
ON
	ad.DEAL_DEAL_ID = d.DEALID
WHERE
	d.ENDDATE > SYSDATE
	AND d.dealtype = 'Кредитные операции'
GROUP BY
	c.CLIENTID
),
CountExternalActiveLoans AS(
SELECT
	c.CLIENTID,
	count(DISTINCT e.EXTERNALCREDITID) COUNT_ACTIVE_LOAN
FROM
	CLIENT c
JOIN EXTERNALCREDITHISTORY e 
ON
	c.CLIENTID = e.CLIENT_CLIENTID
WHERE
	e.CURRENTSTATUS = 'Активный'
GROUP BY
	c.CLIENTID),
TotalActiveCredits AS(SELECT pod.CLIENTID, sum(pod.COUNT_ACTIVE_LOAN) sum_active_loans
FROM(SELECT CIA.CLIENTID, CIA.COUNT_ACTIVE_LOAN
FROM CountInternalActiveLoans CIA
UNION ALL
SELECT CEA.CLIENTID,CEA.COUNT_ACTIVE_LOAN
FROM CountExternalActiveLoans CEA) POD
GROUP BY pod.CLIENTID),
ActiveCreditsScoring AS (
SELECT
	TAC.CLIENTID,
	tac.sum_active_loans,
	CASE
		WHEN tac.sum_active_loans BETWEEN 0 AND 1 THEN 5
		WHEN tac.sum_active_loans = 2 THEN 4
		WHEN tac.sum_active_loans = 3 THEN 3
		WHEN tac.sum_active_loans = 4 THEN 2
		WHEN tac.sum_active_loans BETWEEN 5 AND 7 THEN 1
		ELSE 0
	END AS ACTIVE_LOANS_SCOR
FROM
	TotalActiveCredits TAC),
CollateralScoring AS (
    SELECT 
        d.DealID,
        d.DealAmount,
        SUM(c.EstimatedValue) AS SUM_est,
        CASE
            WHEN d.DealAmount > 0 AND SUM(c.EstimatedValue) > 0 THEN (SUM(c.EstimatedValue) / d.DealAmount) * 100
            ELSE 0
        END AS CollateralPercentage,
        CASE
            WHEN (SUM(c.EstimatedValue) / d.DealAmount) * 100 < 5 THEN 1  -- 1 балл, если процент залога менее 5%
            WHEN (SUM(c.EstimatedValue) / d.DealAmount) * 100 BETWEEN 5 AND 20 THEN 2  -- 2 балла, если от 5% до 20%
            WHEN (SUM(c.EstimatedValue) / d.DealAmount) * 100 BETWEEN 21 AND 40 THEN 3  -- 3 балла, если от 21% до 40%
            WHEN (SUM(c.EstimatedValue) / d.DealAmount) * 100 BETWEEN 41 AND 60 THEN 4  -- 4 балла, если от 41% до 60%
            WHEN (SUM(c.EstimatedValue) / d.DealAmount) * 100 > 60 THEN 5  -- 5 баллов, если более 60%
            ELSE 0
        END AS CollateralScore,
        (SELECT c.ClientID 
         FROM AccountDeal ad
         JOIN Account a ON ad.Account_AccountID = a.AccountID
         JOIN Client c ON a.Client_ClientID = c.ClientID
         WHERE ad.Deal_Deal_ID = d.DealID
         FETCH FIRST 1 ROWS ONLY) AS ClientID 
    FROM 
        Deal d
    JOIN 
        Collateral c ON d.DealID = c.Deal_DealID
    WHERE 
        d.DealType = 'Кредитные операции'
    GROUP BY 
        d.DealID, d.DealAmount
),
ClientMissedPaymentsEx AS (
    SELECT 
        c.ClientID,
        SUM(ech.MissedPaymentsCount) AS TotalMissedPayments
    FROM 
        Client c
    JOIN 
        ExternalCreditHistory ech ON c.ClientID = ech.Client_ClientID
    WHERE 
        ech.CurrentStatus = 'Просрочен'  
    GROUP BY 
        c.ClientID
),
teast1 AS(SELECT DEAL_DEALID, SUM(p.PRINCPALPAYMENT) SUM_PRINCIPAL_PAYMENT, SUM(p.INTERESTPAYMENT) SUM_INTEREST_PAYMENT
FROM PAYMENTSCHEDULE p 
GROUP BY p.DEAL_DEALID),
test2 AS(SELECT d.DEALID, ab.ACCOUNT_ACCOUNTID, ab.BALANCEAMOUNT, ab.BALANCEDATE, a.ACCOUNTTYPE
FROM DEAL d 
JOIN ACCOUNTDEAL ad
ON d.DEALID = ad.DEAL_DEAL_ID 
JOIN ACCOUNT a 
ON ad.ACCOUNT_ACCOUNTID = a.ACCOUNTID 
JOIN ACCOUNTBALANCE ab
ON a.ACCOUNTID = ab.ACCOUNT_ACCOUNTID 
WHERE a.ACCOUNTTYPE = 'Счёт основного долга' OR a.ACCOUNTTYPE = 'Счёт процентов'),
PrincipalPaymentMade AS (SELECT
	t1.DEAL_DEALID,
	t2.ACCOUNT_ACCOUNTID,
	t2.BALANCEDATE,
	CASE 
        -- Для первой строки: TOTAL_SUM_PRINCIPAL_PAYMENT - BALANCEAMOUNT
        WHEN ROW_NUMBER() OVER (PARTITION BY DEAL_DEALID ORDER BY BALANCEDATE) = 1 THEN 
            t1.SUM_PRINCIPAL_PAYMENT - t2.BALANCEAMOUNT
        -- Для остальных строк: разница между предыдущим и текущим BALANCEAMOUNT
        ELSE LAG(t2.BALANCEAMOUNT) OVER (PARTITION BY t1.DEAL_DEALID ORDER BY t2.ACCOUNT_ACCOUNTID, t2.BALANCEDATE) - t2.BALANCEAMOUNT
    END AS PRINCIPAL_PAYMENT_MADE
FROM
	teast1 t1
JOIN test2 t2
ON
	t1.DEAL_DEALID = t2.DEALID
WHERE t2.ACCOUNTTYPE = 'Счёт основного долга'),
InterestPaymentMade AS (SELECT
	t1.DEAL_DEALID,
	t2.ACCOUNT_ACCOUNTID,
	t2.BALANCEDATE,
	CASE 
        -- Для первой строки: TOTAL_SUM_INTEREST_PAYMENT - BALANCEAMOUNT
        WHEN ROW_NUMBER() OVER (PARTITION BY DEAL_DEALID ORDER BY BALANCEDATE) = 1 THEN 
            t1.SUM_INTEREST_PAYMENT - t2.BALANCEAMOUNT
        -- Для остальных строк: разница между предыдущим и текущим BALANCEAMOUNT
        ELSE LAG(t2.BALANCEAMOUNT) OVER (PARTITION BY t1.DEAL_DEALID ORDER BY t2.ACCOUNT_ACCOUNTID, t2.BALANCEDATE) - t2.BALANCEAMOUNT
    END AS INTEREST_PAYMENT_MADE
FROM
	teast1 t1
JOIN test2 t2
ON
	t1.DEAL_DEALID = t2.DEALID
WHERE t2.ACCOUNTTYPE = 'Счёт процентов'),
WITH_TOTAL_PAYMENT_LOAN AS (SELECT 
    p.DEAL_DEALID,
    p.ACCOUNT_ACCOUNTID AS PRINCIPAL_ACCOUNT,
    i.ACCOUNT_ACCOUNTID AS INTEREST_ACCOUNT,
    p.BALANCEDATE,
    p.PRINCIPAL_PAYMENT_MADE,
    i.INTEREST_PAYMENT_MADE
FROM 
    PrincipalPaymentMade p
JOIN 
    InterestPaymentMade i 
ON 
    p.DEAL_DEALID = i.DEAL_DEALID
    AND p.BALANCEDATE = i.BALANCEDATE
  ORDER BY p.DEAL_DEALID, PRINCIPAL_ACCOUNT, p.BALANCEDATE),
PSchedule AS (
SELECT
	p.DEAL_DEALID,
	p.DUEDATE,
	p.PRINCPALPAYMENT,
	p.INTERESTPAYMENT
FROM
	PAYMENTSCHEDULE p),
comparisonpayments AS(SELECT
	b.BRANCHID,
	ps.DEAL_DEALID,
	ps.DUEDATE,
	ps.PRINCPALPAYMENT,
	ps.INTERESTPAYMENT,
	COALESCE(wtp.PRINCIPAL_PAYMENT_MADE,0) PRINCIPAL_PAYMENT_MADE, 
	COALESCE(wtp.INTEREST_PAYMENT_MADE,0) INTEREST_PAYMENT_MADE,
	CASE
		WHEN (ps.PRINCPALPAYMENT = wtp.PRINCIPAL_PAYMENT_MADE AND ps.INTERESTPAYMENT = wtp.INTEREST_PAYMENT_MADE AND ps.DUEDATE <= SYSDATE)
		OR (ps.DUEDATE > SYSDATE)
		THEN 1
		ELSE 0	
	END AS comparison
FROM
	PSchedule PS
LEFT JOIN WITH_TOTAL_PAYMENT_LOAN WTP
ON
	ps.DEAL_DEALID = wtp.DEAL_DEALID
	AND ps.DUEDATE = wtp.BALANCEDATE
JOIN DEAL D
ON d.DEALID = ps.DEAL_DEALID
JOIN Branch B
ON b.BRANCHID = d.BRANCH_BRANCHID 
ORDER BY
	ps.DEAL_DEALID, ps.DUEDATE),
CountOverduePayments AS(SELECT CP.BRANCHID, COUNT(CP.comparison) Count_Overdue_payments
FROM comparisonpayments cp
WHERE CP.comparison = 0
GROUP BY CP.BRANCHID),
SumOverduePayments AS(SELECT CP.BRANCHID, SUM(cp.PRINCPALPAYMENT + cp.INTERESTPAYMENT) sum_overdue_payments
FROM comparisonpayments cp
WHERE CP.comparison = 0
GROUP BY CP.BRANCHID),
InterestIncome as(SELECT CP.BRANCHID, SUM(cp.INTERESTPAYMENT) sum_interest_payments
FROM comparisonpayments cp
WHERE CP.comparison = 1 AND (cp.PRINCPALPAYMENT = cp.PRINCIPAL_PAYMENT_MADE AND cp.INTERESTPAYMENT = cp.INTEREST_PAYMENT_MADE AND cp.DUEDATE <= SYSDATE)
GROUP BY CP.BRANCHID
),
CountOverdueLoans AS (SELECT CP.BRANCHID, COUNT(DISTINCT CP.DEAL_DEALID) Count_Overdue_Loans,
(SELECT c.ClientID
         FROM AccountDeal ad
         JOIN Account a ON ad.Account_AccountID = a.AccountID
         JOIN Client c ON a.CLIENT_CLIENTID = c.ClientID
         WHERE ad.Deal_Deal_ID = cp.DEAL_DEALID
         FETCH FIRST 1 ROWS ONLY) AS ClientID
FROM comparisonpayments cp
WHERE CP.comparison = 0
GROUP BY CP.BRANCHID, cp.DEAL_DEALID),
TotalMissedPayments AS (
    SELECT 
        c.ClientID,
        COALESCE(cmp.TotalMissedPayments, 0) + COALESCE(col.Count_Overdue_Loans, 0) AS TotalMissedPayments
    FROM 
        Client c
    LEFT JOIN 
        ClientMissedPaymentsEx cmp ON c.ClientID = cmp.ClientID
    LEFT JOIN 
        CountOverdueLoans col ON c.ClientID = col.ClientID),
OverdueScoring AS (SELECT
    ClientID,
    CASE 
        WHEN TotalMissedPayments > 0 THEN 0  -- Если есть хотя бы одна просрочка
        ELSE 5  -- Если просрочек нет
    END AS PaymentHistoryScore
    FROM 
    TotalMissedPayments),
InternalLoanHistory AS (
SELECT
	DISTINCT
	c.ClientID,
	d.DealID,
	d.DealAmount
FROM
		Client c
JOIN 
        Account a ON
		c.ClientID = a.Client_ClientID
JOIN 
        AccountDeal ad ON
		a.AccountID = ad.Account_AccountID
JOIN 
        Deal d ON
		ad.Deal_Deal_ID = d.DealID
LEFT JOIN 
        AccountBalance ab ON
		ab.Account_AccountID = a.AccountID
WHERE
		d.DealType = 'Кредитные операции'
	AND (a.ACCOUNTTYPE = 'Счёт основного долга'
		OR a.ACCOUNTTYPE = 'Счёт процентов')
	AND ab.BALANCEAMOUNT LIKE 0
),
ExternalLoanHistory AS (
SELECT
	c.ClientID,
	ech.LoanAmount
FROM
	Client c
JOIN 
        ExternalCreditHistory ech ON
	c.ClientID = ech.Client_ClientID
WHERE
	ech.CurrentStatus = 'Закрыт'
),
TotalHistory AS (SELECT pod.clientid, SUM(pod.dealamount) total_sum_history FROM(SELECT
	ilh.clientid,
	ilh.dealamount
FROM
	InternalLoanHistory ilh
UNION ALL
SELECT elh.clientid, elh.loanamount
FROM ExternalLoanHistory elh) POD
GROUP BY pod.clientid),
RepaymentScoring  AS (SELECT th.clientid, th.total_sum_history,
CASE
        WHEN th.total_sum_history >= 1000000 THEN 5
        WHEN th.total_sum_history BETWEEN 500000 AND 1000000 THEN 4
        WHEN th.total_sum_history BETWEEN 200000 AND 500000 THEN 3
        WHEN th.total_sum_history BETWEEN 100000 AND 200000 THEN 2
        WHEN th.total_sum_history < 100000 THEN 1
        ELSE 0
    END AS TotalLoanScore
FROM TotalHistory th)
SELECT DISTINCT c.clientid "Идентификатор клиента",
ages.age_score "Баллы возраста",
dtis.dti_score "Баллы DTI",
ms.marital_score "Баллы семейного положения",
COALESCE(cs.CollateralScore,0) "Баллы процента залога от суммы кредита",
os.PaymentHistoryScore "Баллы просрочек по кредитам",
COALESCE(rs.TotalLoanScore,0) "Баллы по сумме ранее взятых кредитов и их погашении",
COALESCE(acs.ACTIVE_LOANS_SCOR,0) "Баллы по количеству активных кредитов",
mis.INCOME_SCORE "Баллы ежемесячного дохода",
ages.age_score +
dtis.dti_score +
ms.marital_score +
COALESCE(cs.CollateralScore,0) +
os.PaymentHistoryScore +
COALESCE(rs.TotalLoanScore,0)  +
COALESCE(acs.ACTIVE_LOANS_SCOR,0)  +
mis.INCOME_SCORE "Сумма баллов",
CASE
	WHEN ages.age_score + dtis.dti_score + ms.marital_score + COALESCE(cs.CollateralScore,0) + os.PaymentHistoryScore + COALESCE(rs.TotalLoanScore,0)  + COALESCE(acs.ACTIVE_LOANS_SCOR,0)  + mis.INCOME_SCORE  BETWEEN 1 AND 8 THEN 5
	WHEN ages.age_score + dtis.dti_score + ms.marital_score + COALESCE(cs.CollateralScore,0) + os.PaymentHistoryScore + COALESCE(rs.TotalLoanScore,0)  + COALESCE(acs.ACTIVE_LOANS_SCOR,0)  + mis.INCOME_SCORE BETWEEN 9 AND 16 THEN 4
	WHEN ages.age_score + dtis.dti_score + ms.marital_score + COALESCE(cs.CollateralScore,0) + os.PaymentHistoryScore + COALESCE(rs.TotalLoanScore,0)  + COALESCE(acs.ACTIVE_LOANS_SCOR,0)  + mis.INCOME_SCORE BETWEEN 17 AND 24 THEN 3
	WHEN ages.age_score + dtis.dti_score + ms.marital_score + COALESCE(cs.CollateralScore,0) + os.PaymentHistoryScore + COALESCE(rs.TotalLoanScore,0)  + COALESCE(acs.ACTIVE_LOANS_SCOR,0)  + mis.INCOME_SCORE BETWEEN 25 AND 32 THEN 2
	WHEN ages.age_score + dtis.dti_score + ms.marital_score + COALESCE(cs.CollateralScore,0) + os.PaymentHistoryScore + COALESCE(rs.TotalLoanScore,0)  + COALESCE(acs.ACTIVE_LOANS_SCOR,0)  + mis.INCOME_SCORE BETWEEN 33 AND 40 THEN 1
END AS "Категория качества кредита"
FROM CLIENT c
LEFT JOIN AgeScoring ages
ON c.CLIENTID = ages.Clientid
LEFT JOIN DTIScoring dtis
ON dtis.clientid = c.clientid
LEFT JOIN MaritalScoring ms
ON ms.clientid = c.clientid
LEFT JOIN CollateralScoring cs
ON c.clientid = cs.ClientID
LEFT JOIN OverdueScoring os
ON c.clientid = os.ClientID
LEFT JOIN RepaymentScoring rs
ON c.clientid = rs.clientid
LEFT JOIN ActiveCreditsScoring  acs
ON c.clientid = acs.clientid
LEFT JOIN MonthlyIncomeScoring mis
ON c.clientid = mis.clientid
ORDER BY 
C.CLIENTID;



--вн кр ист
WITH Payments AS (
    SELECT
        p.DEAL_DEALID,
        p.DUEDATE,
        p.PRINCPALPAYMENT,
        p.INTERESTPAYMENT
    FROM
        INTERN_TEAM2.PAYMENTSCHEDULE p
),
Balances AS (
    SELECT
        d.DEALID,
        ab.ACCOUNT_ACCOUNTID,
        ab.BALANCEAMOUNT,
        ab.BALANCEDATE,
        a.ACCOUNTTYPE
    FROM
        INTERN_TEAM2.DEAL d
    JOIN 
        INTERN_TEAM2.ACCOUNTDEAL ad ON d.DEALID = ad.DEAL_DEAL_ID
    JOIN 
        INTERN_TEAM2.ACCOUNT a ON ad.ACCOUNT_ACCOUNTID = a.ACCOUNTID
    JOIN 
        INTERN_TEAM2.ACCOUNTBALANCE ab ON a.ACCOUNTID = ab.ACCOUNT_ACCOUNTID
    WHERE
        a.ACCOUNTTYPE IN ('Счёт основного долга', 'Счёт процентов')
),
PrincipalDue AS (
    SELECT
        p.DEAL_DEALID,
        SUM(p.PRINCPALPAYMENT) AS TOTAL_PRINCIPAL_DUE
    FROM
        Payments p
    WHERE
        p.DUEDATE <= SYSDATE
    GROUP BY
        p.DEAL_DEALID
),
InterestDue AS (
    SELECT
        p.DEAL_DEALID,
        SUM(p.INTERESTPAYMENT) AS TOTAL_INTEREST_DUE
    FROM
        Payments p
    WHERE
        p.DUEDATE <= SYSDATE
    GROUP BY
        p.DEAL_DEALID
),
PrincipalPaid AS (
    SELECT
        b.DEALID,
        SUM(b.BALANCEAMOUNT) AS TOTAL_PRINCIPAL_PAID
    FROM
        Balances b
    WHERE
        b.ACCOUNTTYPE = 'Счёт основного долга'
    GROUP BY
        b.DEALID
),
InterestPaid AS (
    SELECT
        b.DEALID,
        SUM(b.BALANCEAMOUNT) AS TOTAL_INTEREST_PAID
    FROM
        Balances b
    WHERE
        b.ACCOUNTTYPE = 'Счёт процентов'
    GROUP BY
        b.DEALID
),
CountAccounts AS (
    -- Подсчет количества счетов типа 'Счёт основного долга' или 'Счёт процентов' по клиентам и сделкам
    SELECT
        a.CLIENT_CLIENTID AS CLIENTID,
        d.BRANCH_BRANCHID AS BRANCHID,
        d.STARTDATE,
        d.ENDDATE,
        COUNT(a.ACCOUNTID) AS ACCOUNT_COUNT
    FROM
        INTERN_TEAM2.ACCOUNT a
    JOIN INTERN_TEAM2.ACCOUNTDEAL ad ON a.ACCOUNTID = ad.ACCOUNT_ACCOUNTID
    JOIN INTERN_TEAM2.DEAL d ON ad.DEAL_DEAL_ID = d.DEALID
    WHERE
        a.ACCOUNTTYPE IN ('Счёт основного долга', 'Счёт процентов')
    GROUP BY
        a.CLIENT_CLIENTID,
        d.BRANCH_BRANCHID,
        d.STARTDATE,
        d.ENDDATE
),
PaymentSum AS (
    -- Подсчет суммы платежей (проценты + основная сумма) по клиентам и сделкам
    SELECT
        a.CLIENT_CLIENTID AS CLIENTID,
        d.BRANCH_BRANCHID AS BRANCHID,
        d.STARTDATE,
        d.ENDDATE,
        SUM(ps.INTERESTPAYMENT + ps.PRINCPALPAYMENT) AS TOTAL_PAYMENT
    FROM
        INTERN_TEAM2.PAYMENTSCHEDULE ps
    JOIN INTERN_TEAM2.DEAL d ON ps.DEAL_DEALID = d.DEALID
    JOIN INTERN_TEAM2.ACCOUNTDEAL ad ON d.DEALID = ad.DEAL_DEAL_ID
    JOIN INTERN_TEAM2.ACCOUNT a ON ad.ACCOUNT_ACCOUNTID = a.ACCOUNTID
    WHERE
        a.ACCOUNTTYPE IN ('Счёт основного долга', 'Счёт процентов')
    GROUP BY
        a.CLIENT_CLIENTID,
        d.BRANCH_BRANCHID,
        d.STARTDATE,
        d.ENDDATE
),
MonthlyPayment AS (
    -- Расчет месячного платежа
    SELECT
        a.CLIENT_CLIENTID AS CLIENTID,
        d.BRANCH_BRANCHID AS BRANCHID,
        d.STARTDATE,
        d.ENDDATE,
        CASE 
            WHEN COUNT(ps.DEAL_DEALID) > 0 THEN 
                SUM(ps.INTERESTPAYMENT + ps.PRINCPALPAYMENT) / COUNT(DISTINCT EXTRACT(MONTH FROM ps.DUEDATE)) 
            ELSE 
                0 
        END AS MONTHLY_PAYMENT
    FROM
        INTERN_TEAM2.PAYMENTSCHEDULE ps
    JOIN INTERN_TEAM2.DEAL d ON ps.DEAL_DEALID = d.DEALID
    JOIN INTERN_TEAM2.ACCOUNTDEAL ad ON d.DEALID = ad.DEAL_DEAL_ID
    JOIN INTERN_TEAM2.ACCOUNT a ON ad.ACCOUNT_ACCOUNTID = a.ACCOUNTID
    WHERE
        a.ACCOUNTTYPE IN ('Счёт основного долга', 'Счёт процентов')
    GROUP BY
        a.CLIENT_CLIENTID,
        d.BRANCH_BRANCHID,
        d.STARTDATE,
        d.ENDDATE
),
OverduePayments AS (
    -- Определение наличия просрочки (1 - есть просрочка, 0 - нет просрочки)
    SELECT
        ca.CLIENTID,
        ca.BRANCHID,
        ca.STARTDATE,
        ca.ENDDATE,
        CASE
            WHEN pd.TOTAL_PRINCIPAL_DUE > COALESCE(pp.TOTAL_PRINCIPAL_PAID, 0)
                 OR id.TOTAL_INTEREST_DUE > COALESCE(ip.TOTAL_INTEREST_PAID, 0)
            THEN 1
            ELSE 0
        END AS HAS_OVERDUE
    FROM
        CountAccounts ca
    LEFT JOIN
        PrincipalDue pd ON ca.CLIENTID = pd.DEAL_DEALID -- Это нужно изменить на правильное соединение
    LEFT JOIN
        PrincipalPaid pp ON pd.DEAL_DEALID = pp.DEALID
    LEFT JOIN
        InterestDue id ON pd.DEAL_DEALID = id.DEAL_DEALID
    LEFT JOIN
        InterestPaid ip ON id.DEAL_DEALID = ip.DEALID
)
-- Финальный запрос для формирования витрины
SELECT
    ca.CLIENTID AS "ID_Клиента",
    ca.BRANCHID AS "ID_Филиала",
    ca.STARTDATE AS "Дата начала сделки",
    ca.ENDDATE AS "Дата окончания сделки",
    ca.ACCOUNT_COUNT AS "Количество счетов (Счёт основного долга и Счёт процентов)",
    COALESCE(ps.TOTAL_PAYMENT, 0) AS "Сумма платежа (проценты + основная сумма)",
    COALESCE(mp.MONTHLY_PAYMENT, 0) AS "Месячный платёж",
    COALESCE(op.HAS_OVERDUE, 0) AS "Наличие просрочки (1 - есть, 0 - нет)"
FROM
    CountAccounts ca
LEFT JOIN
    PaymentSum ps ON ca.CLIENTID = ps.CLIENTID AND ca.BRANCHID = ps.BRANCHID AND ca.STARTDATE = ps.STARTDATE AND ca.ENDDATE = ps.ENDDATE
LEFT JOIN
    MonthlyPayment mp ON ca.CLIENTID = mp.CLIENTID AND ca.BRANCHID = mp.BRANCHID AND ca.STARTDATE = mp.STARTDATE AND ca.ENDDATE = mp.ENDDATE
LEFT JOIN
    OverduePayments op ON ca.CLIENTID = op.CLIENTID AND ca.BRANCHID = op.BRANCHID AND ca.STARTDATE = op.STARTDATE AND ca.ENDDATE = op.ENDDATE
ORDER BY
    ca.CLIENTID, ca.BRANCHID;